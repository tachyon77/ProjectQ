{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/addanswer/addanswer.component.css","webpack:///./src/app/components/addanswer/addanswer.component.html","webpack:///./src/app/components/addanswer/addanswer.component.ts","webpack:///./src/app/components/addquestion/addquestionform.component.css","webpack:///./src/app/components/addquestion/addquestionform.component.html","webpack:///./src/app/components/addquestion/addquestionform.component.ts","webpack:///./src/app/components/answer-editor-inline/answer-editor-inline.component.css","webpack:///./src/app/components/answer-editor-inline/answer-editor-inline.component.html","webpack:///./src/app/components/answer-editor-inline/answer-editor-inline.component.ts","webpack:///./src/app/components/answer-page/answer-page.component.css","webpack:///./src/app/components/answer-page/answer-page.component.html","webpack:///./src/app/components/answer-page/answer-page.component.ts","webpack:///./src/app/components/answercard/answercard.component.css","webpack:///./src/app/components/answercard/answercard.component.html","webpack:///./src/app/components/answercard/answercard.component.ts","webpack:///./src/app/components/content-editor/contenteditor.component.css","webpack:///./src/app/components/content-editor/contenteditor.component.html","webpack:///./src/app/components/content-editor/contenteditor.component.ts","webpack:///./src/app/components/credentials-editor/credentials-editor.component.css","webpack:///./src/app/components/credentials-editor/credentials-editor.component.html","webpack:///./src/app/components/credentials-editor/credentials-editor.component.ts","webpack:///./src/app/components/credentials-readonly/credentials-readonly.component.css","webpack:///./src/app/components/credentials-readonly/credentials-readonly.component.html","webpack:///./src/app/components/credentials-readonly/credentials-readonly.component.ts","webpack:///./src/app/components/displayquestions/displayquestions.component.css","webpack:///./src/app/components/displayquestions/displayquestions.component.html","webpack:///./src/app/components/displayquestions/displayquestions.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/html-content/html-content.component.css","webpack:///./src/app/components/html-content/html-content.component.html","webpack:///./src/app/components/html-content/html-content.component.ts","webpack:///./src/app/components/inline-text-editor/inlinetexteditor.component.css","webpack:///./src/app/components/inline-text-editor/inlinetexteditor.component.html","webpack:///./src/app/components/inline-text-editor/inlinetexteditor.component.ts","webpack:///./src/app/components/landingpage/landingpage.component.css","webpack:///./src/app/components/landingpage/landingpage.component.html","webpack:///./src/app/components/landingpage/landingpage.component.ts","webpack:///./src/app/components/loginform/loginform.component.css","webpack:///./src/app/components/loginform/loginform.component.html","webpack:///./src/app/components/loginform/loginform.component.ts","webpack:///./src/app/components/navmenu/navmenu.component.css","webpack:///./src/app/components/navmenu/navmenu.component.html","webpack:///./src/app/components/navmenu/navmenu.component.ts","webpack:///./src/app/components/notification-popover/notification-popover.component.css","webpack:///./src/app/components/notification-popover/notification-popover.component.html","webpack:///./src/app/components/notification-popover/notification-popover.component.ts","webpack:///./src/app/components/purchased-answers/purchased-answers.component.css","webpack:///./src/app/components/purchased-answers/purchased-answers.component.html","webpack:///./src/app/components/purchased-answers/purchased-answers.component.ts","webpack:///./src/app/components/questioncard/questioncard.component.css","webpack:///./src/app/components/questioncard/questioncard.component.html","webpack:///./src/app/components/questioncard/questioncard.component.ts","webpack:///./src/app/components/questiondetail/questiondetail.component.css","webpack:///./src/app/components/questiondetail/questiondetail.component.html","webpack:///./src/app/components/questiondetail/questiondetail.component.ts","webpack:///./src/app/components/questioneditor/questioneditor.component.css","webpack:///./src/app/components/questioneditor/questioneditor.component.html","webpack:///./src/app/components/questioneditor/questioneditor.component.ts","webpack:///./src/app/components/registrationform/registrationform.component.css","webpack:///./src/app/components/registrationform/registrationform.component.html","webpack:///./src/app/components/registrationform/registrationform.component.ts","webpack:///./src/app/components/request-invite/request-invite.component.css","webpack:///./src/app/components/request-invite/request-invite.component.html","webpack:///./src/app/components/request-invite/request-invite.component.ts","webpack:///./src/app/components/user-profile/user-profile.component.css","webpack:///./src/app/components/user-profile/user-profile.component.html","webpack:///./src/app/components/user-profile/user-profile.component.ts","webpack:///./src/app/components/user-questions/user-questions.component.css","webpack:///./src/app/components/user-questions/user-questions.component.html","webpack:///./src/app/components/user-questions/user-questions.component.ts","webpack:///./src/app/directives/focus.directive.ts","webpack:///./src/app/directives/viewport-watcher.directive.ts","webpack:///./src/app/directives/viewport-watcher.service.ts","webpack:///./src/app/models/Answer.ts","webpack:///./src/app/models/AnswerDraft.ts","webpack:///./src/app/models/AnswerPayment.ts","webpack:///./src/app/models/AnswerRating.ts","webpack:///./src/app/models/QuestionTopic.ts","webpack:///./src/app/models/User.ts","webpack:///./src/app/pipes/readable-date.pipe.ts","webpack:///./src/app/services/answer-drafts.service.ts","webpack:///./src/app/services/answer-payment.service.ts","webpack:///./src/app/services/answerrating.service.ts","webpack:///./src/app/services/answers.service.ts","webpack:///./src/app/services/application-user.service.ts","webpack:///./src/app/services/identity.service.ts","webpack:///./src/app/services/image-store.service.ts","webpack:///./src/app/services/notification.service.ts","webpack:///./src/app/services/purchased-answers.service.ts","webpack:///./src/app/services/question-topics.service.ts","webpack:///./src/app/services/question-views.service.ts","webpack:///./src/app/services/questionfollower.service.ts","webpack:///./src/app/services/questions.service.ts","webpack:///./src/app/services/redactor.service.ts","webpack:///./src/app/services/request-invite.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddQuestionFormComponent } from './components/addquestion/addquestionform.component';\nimport { AnswerPageComponent } from './components/answer-page/answer-page.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LandingPageComponent } from './components/landingpage/landingpage.component';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\nimport { QuestionDetailComponent } from './components/questiondetail/questiondetail.component';\r\nimport { RequestInviteComponent } from './components/request-invite/request-invite.component';\r\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'landing-page', component: LandingPageComponent },\r\n  { path: 'profile/:id', component: UserProfileComponent },\r\n  { path: 'profile', component: UserProfileComponent },\r\n  { path: 'add-question-form', component: AddQuestionFormComponent },\r\n  { path: 'question-detail/:id', component: QuestionDetailComponent },\r\n  { path: 'answer-page/:id', component: AnswerPageComponent },\r\n  { path: 'request-invite', component: RequestInviteComponent },\r\n  { path: '**', redirectTo: 'home' },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.no-padding {\\r\\n  padding: 0px;\\r\\n}\\r\\n\\r\\n.body-content {\\r\\n  margin-top: 60px;\\r\\n}\\r\\n\"","module.exports = \"<div class='container-fluid no-padding'>\\r\\n  <div *ngIf=\\\"isLoggedIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <nav-menu [user]=\\\"user\\\"\\r\\n                (loggedOut)=\\\"onLogout($event)\\\">\\r\\n      </nav-menu>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row body-content\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!isLoggedIn\\\">\\r\\n    <div>\\r\\n      <landing-page (loggedIn)=\\\"onLogin($event)\\\">\\r\\n      </landing-page>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\nimport { User } from './models/User';\r\nimport { IdentityService } from './services/identity.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  user: User | undefined;\r\n  isLoggedIn: boolean = false;\r\n\r\n  constructor(\r\n    private identityService: IdentityService,\r\n    private router: Router) {\r\n\r\n    this.router.onSameUrlNavigation = 'reload';\r\n  }\r\n\r\n  onLogin(u: User) {\r\n    this.user = u;\r\n    this.isLoggedIn = true;\r\n  }\r\n\r\n  onLogout() {\r\n    this.identityService.logout().subscribe(\r\n      data => { // success path\r\n        this.isLoggedIn = false;\r\n        this.identityService.refreshCSRFToken()\r\n          .subscribe();\r\n      },\r\n      error => {\r\n        alert(\"failed to log out\");\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.identityService.getLoggedInUser().subscribe(\r\n      (user: User) => {\r\n        if (user) {\r\n          this.user = user;\r\n          this.isLoggedIn = true;\r\n        } else {\r\n          this.isLoggedIn = false;\r\n        }\r\n      },\r\n      error => {\r\n        // not supposed to come here. Error is already caught in service layer.\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule }       from '@angular/core';\r\nimport { BrowserModule }  from '@angular/platform-browser';\r\nimport { FormsModule }    from '@angular/forms';\r\nimport { HttpClientModule }    from '@angular/common/http';\r\nimport { AppRoutingModule }     from './app-routing.module';\r\n\r\n\r\n// Custom Directives\r\nimport { FocusDirective } from './directives/focus.directive'\r\nimport { ViewPortWatcherDirective } from './directives/viewport-watcher.directive'\r\n\r\n// ProjectQ components\r\nimport { AppComponent } from './app.component';\r\nimport { ApplicationUserService } from './services/application-user.service';\r\nimport { AnswerService } from './services/answers.service';\r\nimport { AnswerDraftService } from './services/answer-drafts.service';\r\nimport { AnswerEditorInlineComponent } from './components/answer-editor-inline/answer-editor-inline.component';\r\nimport { AnswerPageComponent } from './components/answer-page/answer-page.component';\r\nimport { AnswerPaymentService } from './services/answer-payment.service';\r\nimport { AnswerRatingService } from './services/answerrating.service';\r\nimport { AnswerCardComponent } from './components/answercard/answercard.component';\r\nimport { AddAnswerComponent } from './components/addanswer/addanswer.component';\r\nimport { AddQuestionFormComponent } from './components/addquestion/addquestionform.component';\r\nimport { CredentialsReadonlyComponent } from './components/credentials-readonly/credentials-readonly.component';\r\nimport { CredentialsEditorComponent } from './components/credentials-editor/credentials-editor.component';\r\nimport { ContentEditorComponent } from './components/content-editor/contenteditor.component';\r\nimport { DisplayQuestionsComponent } from './components/displayquestions/displayquestions.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { HtmlContentComponent } from './components/html-content/html-content.component';\r\nimport { ImageStoreService } from './services/image-store.service';\r\nimport { InlineTextEditorComponent } from './components/inline-text-editor/inlinetexteditor.component';\r\nimport { IdentityService } from './services/identity.service';\r\nimport { LandingPageComponent } from './components/landingpage/landingpage.component';\r\nimport { LoginFormComponent } from './components/loginform/loginform.component';\r\nimport { NavMenuComponent } from './components/navmenu/navmenu.component';\r\nimport { NotificationService } from './services/notification.service';\r\nimport { NotificationPopoverComponent } from './components/notification-popover/notification-popover.component';\r\nimport { PurchasedAnswersComponent } from './components/purchased-answers/purchased-answers.component'\r\nimport { PurchasedAnswerService } from './services/purchased-answers.service';\r\nimport { QuestionDetailComponent } from './components/questiondetail/questiondetail.component';\r\nimport { QuestionCardComponent } from './components/questioncard/questioncard.component';\r\nimport { QuestionService } from './services/questions.service';\r\nimport { QuestionFollowerService } from './services/questionfollower.service';\r\nimport { QuestionEditorComponent } from './components/questioneditor/questioneditor.component';\r\nimport { QuestionViewService } from './services/question-views.service';\r\nimport { QuestionTopicService } from './services/question-topics.service';\r\nimport { ReadableDatePipe } from './pipes/readable-date.pipe'\r\nimport { RedactorService } from './services/redactor.service'\r\nimport { RegistrationFormComponent } from './components/registrationform/registrationform.component';\r\nimport { RequestInviteComponent } from './components/request-invite/request-invite.component';\r\nimport { RequestInviteService } from './services/request-invite.service';\r\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\r\nimport { UserQuestionsComponent } from './components/user-questions/user-questions.component';\r\nimport { ViewportWatcherService } from './directives/viewport-watcher.service';\r\n\r\n// third-party modules\r\nimport { AlertModule, ModalModule, PopoverModule } from 'ngx-bootstrap';\r\n\r\n\r\nimport { PLATFORM_ID, APP_ID, Inject } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n\r\n@NgModule({\r\n  entryComponents: [\r\n    CredentialsReadonlyComponent,\r\n    CredentialsEditorComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'sharedmem-front-end' }),\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    AddQuestionFormComponent,\r\n    AnswerCardComponent,\r\n    AnswerEditorInlineComponent,\r\n    AnswerPageComponent,\r\n    AddAnswerComponent,\r\n    CredentialsReadonlyComponent,\r\n    CredentialsEditorComponent,\r\n    ContentEditorComponent,\r\n    DisplayQuestionsComponent,\r\n    FocusDirective,\r\n    HomeComponent,\r\n    HtmlContentComponent,\r\n    InlineTextEditorComponent,\r\n    LandingPageComponent,\r\n    LoginFormComponent,\r\n    NavMenuComponent,\r\n    NotificationPopoverComponent,\r\n    PurchasedAnswersComponent,\r\n    QuestionDetailComponent,\r\n    QuestionCardComponent,\r\n    QuestionEditorComponent,\r\n    ReadableDatePipe,\r\n    RegistrationFormComponent,\r\n    RequestInviteComponent,\r\n    UserProfileComponent,\r\n    UserQuestionsComponent,\r\n    ViewPortWatcherDirective,\r\n  ],\r\n  providers: [\r\n    ApplicationUserService,\r\n    AnswerService,\r\n    AnswerDraftService,\r\n    AnswerPaymentService,\r\n    AnswerRatingService,\r\n    ImageStoreService,\r\n    IdentityService,\r\n    NotificationService,\r\n    PurchasedAnswerService,\r\n    QuestionService,\r\n    QuestionViewService,\r\n    QuestionFollowerService,\r\n    QuestionTopicService,\r\n    RedactorService,\r\n    RequestInviteService,\r\n    ViewportWatcherService,\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule {\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    @Inject(APP_ID) private appId: string) {\r\n    const platform = isPlatformBrowser(platformId) ?\r\n      'in the browser' : 'on the server';\r\n    console.log(`Running ${platform} with appId=${appId}`);\r\n  }\r\n}\r\n","module.exports = \".content-editor-container {\\r\\n    margin-top: 1em;\\r\\n    margin-bottom: 1em;\\r\\n}\\r\\n\\r\\n.draft-status{\\r\\n    color:lightgray;\\r\\n}\\r\\n\\r\\n.answer-form{\\r\\n    padding-top:2em;\\r\\n}\"","module.exports = \"<form [formGroup]=\\\"form\\\"\\r\\n      (ngSubmit)=\\\"onSubmit(form.value)\\\"\\r\\n      class=\\\"answer-form\\\">\\r\\n\\r\\n    <div class=\\\"form-row align-items-center\\\">\\r\\n        <div class=\\\"col-md-3 my-1\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text\\\">Price</div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\"\\r\\n                       class=\\\"form-control\\\"\\r\\n                       name=\\\"price\\\"\\r\\n                       id=\\\"price\\\"\\r\\n                       formControlName=\\\"price\\\"\\r\\n                       placeholder=\\\"$\\\">\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <input type=\\\"checkbox\\\" \\r\\n                   class=\\\"form-control\\\"\\r\\n                   name=\\\"isAnonymous\\\"\\r\\n                   id=\\\"isAnonymous\\\"\\r\\n                   formControlName=\\\"isAnonymous\\\"/> \\r\\n            Anonymous\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"content-editor-container\\\">\\r\\n        <content-editor [content]=\\\"initialContent\\\"\\r\\n                        [enableRedaction]=\\\"true\\\"\\r\\n                        (contentChanged)=\\\"onContentChange($event)\\\">\\r\\n        </content-editor>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <button type=\\\"submit\\\"\\r\\n            [disabled]=\\\"!form.valid\\\"\\r\\n            class=\\\"btn btn-primary btn-sm\\\">\\r\\n        Submit\\r\\n    </button>\\r\\n    <button (click)=\\\"onSaveDraft(form.value)\\\"\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-light no-border btn-sm ml-1\\\">\\r\\n        Save Draft\\r\\n    </button>\\r\\n    <span class=\\\"draft-status\\\">{{draftUpdate}}</span>\\r\\n</form>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, Inject, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { Answer, ProtectedAnswerContent } from '../../models/Answer';\r\nimport { AnswerDraft } from '../../models/AnswerDraft';\r\nimport { AnswerService, AnswerForm } from '../../services/answers.service'\r\nimport { AnswerDraftService } from '../../services/answer-drafts.service'\r\nimport { RedactorService } from '../../services/redactor.service'\r\nimport { ReadableDatePipe } from '../../pipes/readable-date.pipe';\r\n\r\n\r\n@Component({\r\n    selector: 'add-answer',\r\n    templateUrl: './addanswer.component.html',\r\n    styleUrls:['./addanswer.component.css'],\r\n})\r\nexport class AddAnswerComponent {\r\n    private _draft: AnswerDraft = new AnswerDraft();\r\n    private _answer: Answer = new Answer();\r\n    initialContent: string = \"\";\r\n    lastSaved: Date | undefined;\r\n    draftUpdate: string = \"\";\r\n    dateFilter = new ReadableDatePipe();\r\n    form: FormGroup | undefined;\r\n\r\n    @Output() answerAdded = new EventEmitter();\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private answerService: AnswerService,\r\n        private answerDraftService: AnswerDraftService,\r\n        private redactorService: RedactorService) {\r\n\r\n        this.createForm();\r\n    }\r\n\r\n\r\n    get draft() {\r\n        return this._draft;\r\n    }\r\n\r\n    @Input()\r\n    set questionId(questionId: number) {\r\n        this._draft.questionId = questionId;\r\n        this._answer.questionId = questionId;\r\n\r\n        this.answerDraftService.getForQuestion(questionId).subscribe(\r\n            json => {\r\n                if (json) {\r\n                    let draft = json as AnswerDraft;\r\n                    this._draft = draft;\r\n                    this.initialContent = draft.htmlContent;\r\n                    this.form!.setValue({\r\n                        price: this._draft.price,\r\n                        isAnonymous: this._draft.isAnonymous\r\n                    })\r\n                    this.startDraftLastSavedMessageUpdater();\r\n                } else {\r\n                    this.initialContent = \"\";\r\n                }\r\n\r\n            },\r\n            error => console.error(error)\r\n        ); \r\n    }\r\n\r\n    onContentChange(content: string) {\r\n        this.draft.htmlContent = content;\r\n    }\r\n\r\n    createForm() {\r\n        this.form = this.formBuilder.group({\r\n            price: this.formBuilder.control(this.draft.price, Validators.compose([\r\n                Validators.pattern('[0-9]+'),\r\n            ])),\r\n            isAnonymous: this.formBuilder.control(this.draft.isAnonymous),\r\n        });\r\n    }\r\n\r\n    startDraftLastSavedMessageUpdater() {\r\n        setInterval(\r\n            () => {\r\n                if (this.lastSaved) {\r\n                    this.draftUpdate =\r\n                        \"Draft saved \"\r\n                        + this.dateFilter.transform(this.lastSaved);\r\n                }\r\n                \r\n            },\r\n            15000\r\n        );\r\n    }\r\n\r\n    onSubmit(form: AnswerForm) {\r\n        this._answer.price = form.price;\r\n        this._answer.isAnonymous = form.isAnonymous;\r\n        this._answer.protectedAnswerContent = new ProtectedAnswerContent();\r\n        this._answer.protectedAnswerContent.htmlContent = this._draft.htmlContent;\r\n        this._answer.redactedHtmlContent = this.redactorService.getRedactedHtml(this._draft.htmlContent);\r\n\r\n        this.answerService.add(this._answer)\r\n            .subscribe(() => {\r\n                this.answerAdded.emit(this._answer);\r\n            });\r\n    }\r\n\r\n    onSaveDraft(form: AnswerForm) {\r\n        this._draft.price = form.price;\r\n        this._draft.isAnonymous = form.isAnonymous;\r\n        this.answerDraftService.update(this._draft)\r\n            .subscribe(() => {\r\n                this.lastSaved = new Date();\r\n                this.draftUpdate = \"Draft saved \" + this.dateFilter.transform(this.lastSaved);\r\n            });\r\n    }\r\n}\r\n","module.exports = \".add-question{\\r\\n\\r\\n}\"","module.exports = \"<div class=\\\"offset-md-1 col-md-9\\\">\\r\\n    <form class=\\\"m-4\\\"\\r\\n          [formGroup]=\\\"form\\\"\\r\\n          (ngSubmit)=\\\"onSubmit(form.value)\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <h4>\\r\\n                Question\\r\\n            </h4>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <textarea rows=\\\"2\\\"\\r\\n                      class=\\\"col-md-12 form-control\\\"\\r\\n                      name=\\\"title\\\" id=\\\"title\\\"\\r\\n                      formControlName=\\\"title\\\">\\r\\n            </textarea>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row pt-5\\\">\\r\\n            <h5>Context</h5>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row pt-2\\\">\\r\\n            <div class=\\\"col pl-0\\\">\\r\\n                <content-editor [content]=\\\"description\\\"\\r\\n                                (contentChanged)=\\\"onDescriptionChanged($event)\\\">\\r\\n                </content-editor>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row pt-3\\\">\\r\\n            <h5>$ Reward:</h5>\\r\\n            <input type=\\\"number\\\"\\r\\n                   class=\\\"form-control form-inline\\\"\\r\\n                   name=\\\"OfferedPrice\\\" id=\\\"OfferedPrice\\\"\\r\\n                   formControlName=\\\"offeredPrice\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row pt-2\\\">\\r\\n            <label class=\\\"checkbox-inline\\\">\\r\\n                <input type=\\\"checkbox\\\"\\r\\n                       name=\\\"isAnonymous\\\"\\r\\n                       id=\\\"isAnonymous\\\"\\r\\n                       formControlName=\\\"isAnonymous\\\"\\r\\n                       value=\\\"\\\"> Anonymous\\r\\n            </label>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row pt-2\\\">\\r\\n            <button class=\\\"col-md-1 btn btn-primary\\\"\\r\\n                    type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\r\\n                Post\\r\\n            </button>\\r\\n            <button *ngIf=\\\"false\\\"\\r\\n                    class=\\\"cl-md-1 btn btn-secondary ml-1\\\"\\r\\n                    (click)=\\\"onCancel()\\\">\\r\\n                Cancel\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","﻿import { Component, Inject } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Question } from '../../models/Question';\r\nimport { QuestionService } from '../../services/questions.service'\r\n\r\n@Component({\r\n    selector: 'add-question-form',\r\n    templateUrl: './addquestionform.component.html',\r\n    styleUrls: ['./addquestionform.component.css'],\r\n})\r\nexport class AddQuestionFormComponent {\r\n    form: FormGroup | undefined;\r\n    description: string = \"\";\r\n    updatedDescription: string = \"\";\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private questionService: QuestionService,\r\n        private router: Router) { }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            title: this.formBuilder.control('', Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n            isAnonymous: this.formBuilder.control(false),\r\n            offeredPrice: this.formBuilder.control(0, Validators.compose([\r\n                Validators.pattern('[0-9]+'),\r\n            ])),\r\n        });\r\n    }\r\n\r\n    onDescriptionChanged(newDesc: string) {\r\n        this.updatedDescription = newDesc;\r\n    }\r\n\r\n    onSubmit(question: Question) {\r\n        question.description = this.updatedDescription;\r\n        this.questionService.add(question)\r\n            .subscribe(() => {\r\n                this.router.navigate(['/home']); // TODO: go to the question instead\r\n            });\r\n    }\r\n}","module.exports = \".content-editor-container {\\r\\n    margin-top: 1em;\\r\\n    margin-bottom: 1em;\\r\\n}\\r\\n\\r\\n.draft-status {\\r\\n    color: lightgray;\\r\\n}\"","module.exports = \"<em *ngIf=\\\"!answer || !draft\\\">Loading ...</em>\\r\\n<form *ngIf=\\\"answer && draft\\\"\\r\\n      [formGroup]=\\\"form\\\"\\r\\n      (ngSubmit)=\\\"onSubmit(form.value)\\\"\\r\\n      class=\\\"answer-form\\\">\\r\\n\\r\\n    <div class=\\\"form-row align-items-center\\\">\\r\\n        <div class=\\\"col-sm-3 my-1\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text\\\">Price</div>\\r\\n                </div>\\r\\n                <input type=\\\"text\\\"\\r\\n                       class=\\\"form-control\\\"\\r\\n                       name=\\\"price\\\"\\r\\n                       id=\\\"price\\\"\\r\\n                       formControlName=\\\"price\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"content-editor-container\\\">\\r\\n        <content-editor [content]=\\\"curProtectedContent\\\"\\r\\n                        [enableRedaction]=\\\"true\\\"\\r\\n                        (contentChanged)=\\\"onContentChange($event)\\\">\\r\\n        </content-editor>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\"\\r\\n            [disabled]=\\\"!answer || !form.valid\\\"\\r\\n            class=\\\"btn btn-primary btn-sm\\\">\\r\\n        Save\\r\\n    </button>\\r\\n    <button type=\\\"button\\\"\\r\\n            (click)=\\\"onSaveDraft(form.value)\\\"\\r\\n            class=\\\"btn btn-light no-border btn-sm ml-1\\\">\\r\\n        Save Draft\\r\\n    </button>\\r\\n    <button type=\\\"submit\\\"\\r\\n            (click)=\\\"onCancel()\\\"\\r\\n            class=\\\"btn btn-secondary float-right btn-sm\\\">\\r\\n        Cancel\\r\\n    </button>\\r\\n    <span class=\\\"draft-status\\\">{{draftUpdate}}</span>\\r\\n</form>\\r\\n\\r\\n\\r\\n    \\r\\n\"","﻿import { Component, Inject, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { AnswerDraft } from '../../models/AnswerDraft';\r\nimport { Answer, ProtectedAnswerContent } from '../../models/Answer';\r\nimport { AnswerService, AnswerForm } from '../../services/answers.service'\r\nimport { AnswerDraftService } from '../../services/answer-drafts.service'\r\nimport { RedactorService } from '../../services/redactor.service'\r\nimport { ReadableDatePipe } from '../../pipes/readable-date.pipe';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n\r\n\r\n// Input: answer id\r\n// Output: Answer updated event, Update canelled event.\r\n\r\n@Component({\r\n    selector: 'answer-editor-inline',\r\n    templateUrl: './answer-editor-inline.component.html',\r\n    styleUrls: ['./answer-editor-inline.component.css'],\r\n})\r\nexport class AnswerEditorInlineComponent{\r\n\r\n    @Output() answerUpdated = new EventEmitter();\r\n    @Output() updateCancelled = new EventEmitter();\r\n\r\n    @Input()\r\n    set answerId(id: number) {\r\n        this.answerService.getById(id).subscribe(\r\n            (answer: Answer) => {\r\n                this._answer = answer;\r\n\r\n                // There will always be a draft if there is an answer.\r\n                this.answerDraftService.getForQuestion(answer.questionId!).subscribe(\r\n                    json => {\r\n                        this._draft = json as AnswerDraft;\r\n                        this._curProtectedContent = this._draft.htmlContent;\r\n\r\n                        this.initForm();\r\n                        this.scheduleDraftStatusUpdater();\r\n                    },\r\n                    error => console.error(error)\r\n                );\r\n            },\r\n            error => console.error(error)\r\n        );\r\n    }\r\n\r\n    private _answer: Answer | undefined;\r\n    private _answerId: number | undefined;\r\n    private _draft: AnswerDraft | undefined;\r\n    lastSaved: Date | undefined;\r\n    draftUpdate: string = \"\";\r\n    dateFilter = new ReadableDatePipe();\r\n    // We need this to save the original content in case we want to cancel update and revert back\r\n    private _curProtectedContent: string = \"\";\r\n    form: FormGroup | undefined;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private answerService: AnswerService,\r\n        private answerDraftService: AnswerDraftService,\r\n        private redactorService: RedactorService,\r\n    ) {\r\n        this._answer = new Answer();\r\n    }\r\n\r\n    get curProtectedContent() {\r\n        return this._curProtectedContent;\r\n    }\r\n\r\n    get answer() {\r\n        return this._answer;\r\n    }\r\n\r\n    get draft() {\r\n        return this._draft;\r\n    }\r\n\r\n    initForm() {\r\n        this.form = this.formBuilder.group({\r\n            // non null assertion : only called after draft it successfully loaded\r\n            price: this.formBuilder.control(this.draft!.price, Validators.compose([\r\n                Validators.pattern('[0-9]+'),\r\n            ])),\r\n        });\r\n    }\r\n\r\n    scheduleDraftStatusUpdater() {\r\n        setInterval(\r\n            () => {\r\n                if (this.lastSaved) {\r\n                    this.draftUpdate =\r\n                        \"Draft saved \"\r\n                        + this.dateFilter.transform(this.lastSaved);\r\n                }\r\n            },\r\n            15000\r\n        );\r\n    }\r\n\r\n    onContentChange(content: string) {\r\n        this.draft!.htmlContent = content;\r\n    }\r\n\r\n    onSubmit(form: AnswerForm) {\r\n        this.answer!.price = form.price;\r\n        this.answer!.protectedAnswerContent = new ProtectedAnswerContent();\r\n        // form only loaded when draft is loaded\r\n        this.answer!.protectedAnswerContent!.htmlContent = this.draft!.htmlContent;\r\n        this.answer!.redactedHtmlContent =\r\n            this.redactorService.getRedactedHtml(this.draft!.htmlContent);\r\n\r\n        this.answerService.update(this.answer!)\r\n            .subscribe(() => {\r\n                this.answerUpdated.emit(this.answer);\r\n            });\r\n    }\r\n\r\n    onSaveDraft(form: AnswerForm) {\r\n        // callable only after draft is loaded\r\n        this._draft!.price = form.price;\r\n        this.answerDraftService.update(this._draft!)\r\n            .subscribe(() => {\r\n                this.lastSaved = new Date();\r\n                this.draftUpdate = \"Draft saved \" + this.dateFilter.transform(this.lastSaved);\r\n            });\r\n    }\r\n\r\n    onCancel() {\r\n        //this.answer.protectedAnswerContent.htmlContent = this._curProtectedContent;\r\n        this.updateCancelled.emit();\r\n    }\r\n}","module.exports = \".answer-card{\\r\\n    font-family:\\\"Helvetica Neue\\\";\\r\\n    font-size:large;\\r\\n}\\r\\n\\r\\n.answer-user {\\r\\n    font-weight:600;\\r\\n    margin-bottom:1em;\\r\\n}\\r\\n\\r\\n.answer-content{\\r\\n    margin-bottom:1em;\\r\\n}\\r\\n\\r\\n.deleted-answer {\\r\\n    opacity: 0.2; /* Real browsers */\\r\\n    filter: alpha(opacity = 20); /* MSIE */\\r\\n}\\r\\n\\r\\n.answer-date{\\r\\n    font-weight:400;\\r\\n    color:#adaaaa;\\r\\n}\\r\\n\\r\\n.question-title {\\r\\n    font-family: sans-serif;\\r\\n    font-weight: 600;\\r\\n    font-size: x-large;\\r\\n    cursor:pointer;\\r\\n}\\r\\n\\r\\n.question-description {\\r\\n    font-family: sans-serif;\\r\\n    font-weight: 500;\\r\\n    font-size: large;\\r\\n    margin-top: 1em;\\r\\n    margin-bottom: 1em;\\r\\n}\\r\\n\"","module.exports = \"<br />\\r\\n<div class=\\\"offset-md-1 col-md-9\\\">\\r\\n    <p *ngIf=\\\"!question\\\"><em>Loading...</em></p>\\r\\n    <div *ngIf=\\\"question\\\">\\r\\n        <div class=\\\"question-title\\\"\\r\\n             [routerLink]=\\\"['/question-detail', question.id]\\\">\\r\\n            {{question.title}}\\r\\n            <span class=\\\"badge badge-secondary badge-success\\\">\\r\\n                ${{question.offeredPrice}}\\r\\n            </span>\\r\\n        </div>\\r\\n        <html-content [htmlString]=\\\"question.description\\\"\\r\\n                      class=\\\"question-description\\\">\\r\\n        </html-content>\\r\\n    </div>\\r\\n    <hr />\\r\\n    <p *ngIf=\\\"!answer\\\"><em>Loading...</em></p>\\r\\n    <div *ngIf=\\\"answer\\\" class=\\\"answer-card\\\">\\r\\n        <div *ngIf=\\\"!isUpdateAnswerVisible\\\">\\r\\n            <div class=\\\"answer-user\\\" *ngIf=\\\"answer && answer.user\\\">\\r\\n                {{answer.user.name}}\\r\\n                <div class=\\\"answer-date\\\">Answered {{answer.originDate | readableDate}}</div>\\r\\n            </div>\\r\\n\\r\\n            <html-content [htmlString]=\\\"answer.redactedHtmlContent\\\"\\r\\n                          class=\\\"answer-content\\\">\\r\\n            </html-content>\\r\\n\\r\\n            <button class=\\\"btn btn-default btn-sm\\\"\\r\\n                    (click)=\\\"OnEditClick()\\\">\\r\\n                Edit\\r\\n            </button>\\r\\n            <button class=\\\"btn btn-default btn-sm\\\"\\r\\n                    (click)=\\\"OnDeleteClick()\\\">\\r\\n                Delete\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"isUpdateAnswerVisible\\\">\\r\\n            <answer-editor-inline [answerId]=\\\"answer.id\\\"\\r\\n                                  (answerUpdated)=\\\"onAnswerUpdated($event)\\\"\\r\\n                                  (updateCancelled)=\\\"onUpdateCancelled()\\\">\\r\\n            </answer-editor-inline>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n;\r\nimport { Answer } from '../../models/Answer';\r\nimport { Question } from '../../models/Question';\r\n\r\nimport { AnswerService } from '../../services/answers.service'\r\nimport { AnswerRatingService } from '../../services/answerrating.service'\r\nimport { OnInit } from '@angular/core/src/metadata/lifecycle_hooks';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { QuestionService } from '../../services/questions.service';\r\n\r\n@Component({\r\n    selector: 'answer-page',\r\n    templateUrl: './answer-page.component.html',\r\n    styleUrls: ['./answer-page.component.css'],\r\n})\r\n\r\nexport class AnswerPageComponent implements OnInit {\r\n    private _answer: Answer | undefined;\r\n    public isUpdateAnswerVisible: boolean;\r\n    @Output() answerDeleted = new EventEmitter();\r\n    private paramsSubscription: any;\r\n    question: Question | undefined;\r\n\r\n    get answer() {\r\n        return this._answer;\r\n    }\r\n\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute,\r\n        private answerService: AnswerService,\r\n        private questionService: QuestionService,\r\n        private answerRatingService: AnswerRatingService,\r\n    ) {\r\n        this.isUpdateAnswerVisible = false;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.paramsSubscription =\r\n            this.activatedRoute.params.subscribe(\r\n                (params:any) => {\r\n                    let answerId = Number(params['id']);\r\n                    this.loadAnswer(answerId);\r\n                }\r\n            );\r\n    }\r\n\r\n    loadQuestion(questionId: number) {\r\n        this.questionService.getById(questionId)\r\n            .subscribe(result => {\r\n                this.question = result as Question;\r\n            }, error => console.error(error));\r\n    }\r\n\r\n    loadAnswer(id: number) {\r\n        this.answerService.getById(id).subscribe(\r\n            (answer: Answer) => {\r\n                this._answer = answer;\r\n                this.loadQuestion(answer.questionId!);\r\n            },\r\n            error => console.error(error)\r\n        );\r\n    }\r\n\r\n    OnEditClick() {\r\n        this.isUpdateAnswerVisible = true;\r\n    }\r\n\r\n    OnDeleteClick() {\r\n        this.answerService.delete(this.answer!.id!)\r\n            .subscribe(() => {\r\n                //this.answerDeleted.emit(this.answer);\r\n            });\r\n    }\r\n\r\n    OnUnDeleteClick() {\r\n        this.answerService.unDelete(this.answer!.id!)\r\n            .subscribe(() => {\r\n                //this.answerDeleted.emit(this.answer);\r\n            });\r\n    }\r\n\r\n    onAnswerUpdated(answer: Answer) {\r\n        this._answer = answer;\r\n        this.isUpdateAnswerVisible = false;\r\n    }\r\n\r\n    onUpdateCancelled() {\r\n        this.isUpdateAnswerVisible = false;\r\n    }\r\n}\r\n\r\n\r\n","module.exports = \".answer-card{\\r\\n    font-family:\\\"Helvetica Neue\\\";\\r\\n    font-size:large;\\r\\n}\\r\\n\\r\\n.answer-user {\\r\\n    font-weight:600;\\r\\n    margin-bottom:1em;\\r\\n}\\r\\n\\r\\n.answer-content{\\r\\n    margin-bottom:1em;\\r\\n}\\r\\n\\r\\n.price-note {\\r\\n    font-size: smaller;\\r\\n}\\r\\n\\r\\n.deleted-answer {\\r\\n    opacity: 0.2; /* Real browsers */\\r\\n    filter: alpha(opacity = 20); /* MSIE */\\r\\n}\\r\\n\\r\\n.answer-date{\\r\\n    font-weight:400;\\r\\n    color:#adaaaa;\\r\\n}\\r\\n\\r\\n.dollar-sign {\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.price-tag {\\r\\n    font-size: 1.5em;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.rating {\\r\\n    unicode-bidi: bidi-override;\\r\\n    direction: rtl;\\r\\n    cursor:pointer;\\r\\n    color:green;\\r\\n    font-size:24px;\\r\\n}\\r\\n\\r\\n.rating > span {\\r\\n        display: inline-block;\\r\\n        position: relative;\\r\\n        width: 1.1em;\\r\\n    }\\r\\n\\r\\n.rating > span:hover:before,\\r\\n        .rating > span:hover ~ span:before {\\r\\n            content: \\\"\\\\2605\\\";\\r\\n            position: absolute;\\r\\n        }\\r\\n\\r\\n.average-rating{\\r\\n    float:right;\\r\\n}\\r\\n\\r\\n.no-rating {\\r\\n    float: right;\\r\\n    color:lightgray;\\r\\n    font-style:italic;\\r\\n}\\r\\n\"","module.exports = \"<p *ngIf=\\\"!answerView\\\">loading ...</p>\\r\\n<div *ngIf=\\\"answerView\\\" class=\\\"answer-card\\\">\\r\\n    <div *ngIf=\\\"!isUpdateAnswerVisible\\\" class=\\\"row no-gutters\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"row no-gutters answer-user\\\" *ngIf=\\\"answerView.answer.user\\\">\\r\\n                <!--Author Identity-->\\r\\n                <span *ngIf=\\\"answerView.answer.isAnonymous\\\">\\r\\n                    Anonymous\\r\\n                </span>\\r\\n                <span *ngIf=\\\"!answerView.answer.isAnonymous\\\">\\r\\n                    {{answerView.answer.user.name}}\\r\\n                </span>\\r\\n                <span *ngIf=\\\"isAuthor\\\">\\r\\n                    [You]\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n            <!--Answer Date time-->\\r\\n            <div class=\\\"row no-gutters answer-date\\\">\\r\\n                Answered {{answerView.answer.originDate | readableDate}}\\r\\n            </div>\\r\\n\\r\\n            <!--Option to Rate Answer-->\\r\\n            <div *ngIf=\\\"!isAuthor\\\" class=\\\"row no-gutters\\\">\\r\\n                <div class=\\\"rating\\\" *ngIf=\\\"rating[0]\\\">\\r\\n                    <span (click)=\\\"rate(5)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(4)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(3)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(2)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(1)\\\">☆</span>\\r\\n                </div>\\r\\n                <div class=\\\"rating\\\" *ngIf=\\\"rating[1]\\\">\\r\\n                    <span (click)=\\\"rate(5)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(4)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(3)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(2)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(1)\\\">★</span>\\r\\n                </div>\\r\\n                <div class=\\\"rating\\\" *ngIf=\\\"rating[2]\\\">\\r\\n                    <span (click)=\\\"rate(5)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(4)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(3)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(2)\\\">★</span>\\r\\n                    <span (click)=\\\"rate(1)\\\">★</span>\\r\\n                </div>\\r\\n                <div class=\\\"rating\\\" *ngIf=\\\"rating[3]\\\">\\r\\n                    <span (click)=\\\"rate(5)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(4)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(3)\\\">★</span>\\r\\n                    <span (click)=\\\"rate(2)\\\">★</span>\\r\\n                    <span (click)=\\\"rate(1)\\\">★</span>\\r\\n                </div>\\r\\n                <div class=\\\"rating\\\" *ngIf=\\\"rating[4]\\\">\\r\\n                    <span (click)=\\\"rate(5)\\\">☆</span>\\r\\n                    <span (click)=\\\"rate(4)\\\">★</span>\\r\\n                    <span (click)=\\\"rate(3)\\\">★</span>\\r\\n                    <span (click)=\\\"rate(2)\\\">★</span>\\r\\n                    <span (click)=\\\"rate(1)\\\">★</span>\\r\\n                </div>\\r\\n                <div class=\\\"rating\\\" *ngIf=\\\"rating[5]\\\">\\r\\n                    <span (click)=\\\"rate(5)\\\">★</span>\\r\\n                    <span (click)=\\\"rate(4)\\\">★</span>\\r\\n                    <span (click)=\\\"rate(3)\\\">★</span>\\r\\n                    <span (click)=\\\"rate(2)\\\">★</span>\\r\\n                    <span (click)=\\\"rate(1)\\\">★</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!--Average Rating-->\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <span *ngIf=\\\"!answerView.averageRating\\\"\\r\\n                  class=\\\"no-rating\\\">\\r\\n                No ratings yet\\r\\n            </span>\\r\\n            <span *ngIf=\\\"answerView.averageRating\\\"\\r\\n                  class=\\\"average-rating\\\">\\r\\n                {{answerView.averageRating}} / 5\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!--Answer Purchase Option-->\\r\\n    <div *ngIf=\\\"answerView.answer.price > 0 && !isAuthor\\\" class=\\\"mt-3\\\">\\r\\n        <hr />\\r\\n        <!--Buy-->\\r\\n        <span class=\\\"dollar-sign\\\">$</span>\\r\\n        <span class=\\\"price-tag\\\">{{answerView.answer.price}}.00</span>\\r\\n\\r\\n        <button class=\\\"btn btn-success ml-2\\\"\\r\\n                (click)=\\\"onOpenCreditPay(cardPaymentTemplate)\\\">\\r\\n            Buy\\r\\n        </button>\\r\\n        <span class=\\\"ml-2 price-note\\\"> *Parts of this answer is hidden. You need to buy it to see full answer.</span>\\r\\n        \\r\\n        <hr />\\r\\n        <!--counter offer-->\\r\\n        <button hidden class=\\\"btn btn-secondary btn-sm ml-2\\\"\\r\\n                (click)=\\\"OnCounterOfferClick()\\\">\\r\\n            <i class=\\\"fas fa-hand-holding-usd\\\"></i>\\r\\n            Counter offer\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <!--Answer Content-->\\r\\n    <div class=\\\"my-4\\\">\\r\\n        <html-content [htmlString]=\\\"answerView.answer.redactedHtmlContent\\\"\\r\\n                      class=\\\"answer-content\\\">\\r\\n        </html-content>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"isAuthor\\\">\\r\\n        <!--Edit-->\\r\\n        <button class=\\\"btn btn-sm\\\"\\r\\n                (click)=\\\"OnEditClick()\\\">\\r\\n            Edit\\r\\n        </button>\\r\\n\\r\\n        <!--Delete-->\\r\\n        <button class=\\\"btn btn-sm ml-1\\\"\\r\\n                (click)=\\\"OnDeleteClick()\\\">\\r\\n            <span *ngIf=\\\"answerView.answer.isDeleted\\\">Undelete</span>\\r\\n            <span *ngIf=\\\"!answerView.answer.isDeleted\\\">Delete</span>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <!--Answer editor-->\\r\\n    <div *ngIf=\\\"isUpdateAnswerVisible\\\" class=\\\"row no-gutters\\\">\\r\\n        <answer-editor-inline [answerId]=\\\"answerView.answer.id\\\"\\r\\n                              (answerUpdated)=\\\"onAnswerUpdated($event)\\\"\\r\\n                              (updateCancelled)=\\\"onUpdateCancelled()\\\">\\r\\n        </answer-editor-inline>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { AnswerService, UserSpecificAnswerView } from '../../services/answers.service'\r\n\r\nimport { Answer } from '../../models/Answer';\r\nimport { User } from '../../models/User';\r\nimport { AnswerRating } from '../../models/AnswerRating';\r\nimport { AnswerPayment } from '../../models/AnswerPayment';\r\n\r\nimport { AnswerRatingService } from '../../services/answerrating.service'\r\nimport { AnswerPaymentService } from '../../services/answer-payment.service';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\r\n\r\n\r\n@Component({\r\n    selector: 'answer-card',\r\n    templateUrl: './answercard.component.html',\r\n    styleUrls: ['./answercard.component.css'],\r\n})\r\n\r\nexport class AnswerCardComponent {\r\n    private _answerView: UserSpecificAnswerView | undefined;\r\n    public isUpdateAnswerVisible: boolean;\r\n    @Output() answerDeleted = new EventEmitter();\r\n    public rating: boolean[];\r\n    private _loggedInUser: User | undefined;\r\n    showPaymentForm: boolean = false;\r\n    creditPayModal: BsModalRef | undefined;\r\n    isPaymentVisible: boolean = false;\r\n\r\n    get isAuthor() {\r\n        return this.loggedInUser\r\n            && this.answerView\r\n            && this.answerView.answer\r\n            && this.answerView.answer.user\r\n            && this.answerView.answer.user.id === this.loggedInUser.id;\r\n    }\r\n\r\n    @Input()\r\n    set loggedInUser(user: User | undefined) {\r\n        this._loggedInUser = user;\r\n    }\r\n\r\n    // Any propoerty that can't be initialized in constrctr needs to include undefined\r\n    get loggedInUser(): (User | undefined) {\r\n        return this._loggedInUser;\r\n    }\r\n\r\n    get answerView(): (UserSpecificAnswerView | undefined) {\r\n        return this._answerView;\r\n    }\r\n\r\n    @Input()\r\n    set answerView(answerView: UserSpecificAnswerView | undefined) {\r\n        if (answerView) {\r\n            this._answerView = answerView;\r\n\r\n            if (answerView.rating == null) {\r\n                this.rating[0] = true;\r\n            }\r\n            else {\r\n                this.rating[answerView.rating!.rating!] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    rate(score: number) {\r\n\r\n        for (var i = 0; i < 6; i++) {\r\n            this.rating[i] = false;\r\n        }\r\n        this.rating[score] = true;\r\n\r\n        var answerRating = new AnswerRating();\r\n        // This method is guarded by an ngIf that guarantees answerView to be defined.\r\n        answerRating.answerId = this.answerView!.answer.id;\r\n        answerRating.rating = score;\r\n        this.answerRatingService.postRating(answerRating)\r\n            .subscribe((result) => { });\r\n    }\r\n\r\n    constructor(\r\n        private answerService: AnswerService,\r\n        private answerPaymentService: AnswerPaymentService,\r\n        private answerRatingService: AnswerRatingService,\r\n        private modalService: BsModalService,\r\n    ) {\r\n        this.isUpdateAnswerVisible = false;\r\n        this.rating = [false, false, false, false, false, false];\r\n    }\r\n\r\n    OnChargeProcessed(isSuccessful: boolean) {\r\n         if (isSuccessful) {                \r\n            this.answerService.purchase(this.answerView!.answer!.id!)\r\n                .subscribe(() => {\r\n                    alert(\"Purchase successful. You can view purchased answers in your profile page.\");\r\n                    this.showPaymentForm = false;\r\n                });\r\n        }\r\n    }\r\n\r\n    OnEditClick() {\r\n        this.isUpdateAnswerVisible = true;\r\n    }\r\n\r\n    OnDeleteClick() {\r\n        // non null assertion: Guaraded by ngIf\r\n        this.answerService.delete(this.answerView!.answer!.id!)\r\n            .subscribe(() => {\r\n                //this.answerDeleted.emit(this.answer);\r\n            });\r\n    }\r\n\r\n    onOpenCreditPay() {\r\n        var handler = (<any>window).StripeCheckout.configure({\r\n            key: 'pk_test_DAraSvJLJBImk4lRam9CiLq8',\r\n            image: 'https://stripe.com/img/documentation/checkout/marketplace.png',\r\n            locale: 'auto',\r\n            token: (token) => {\r\n                let ans = this._answerView.answer;\r\n                let answerPayment = new AnswerPayment();\r\n                answerPayment.amount = ans.price;\r\n                answerPayment.answerId = ans.id;\r\n                answerPayment.paymentTypeId = 1; // TODO: remove hard coding\r\n\r\n                answerPayment!.token = token.id;\r\n                this.answerPaymentService.postPayment(answerPayment!)\r\n                    .subscribe(\r\n                        paymentStatus => {\r\n                            if (paymentStatus.isSuccessful) {\r\n                                this.answerService.purchase(this.answerView!.answer!.id!)\r\n                                    .subscribe(() => {\r\n                                        alert(\"Purchase successful. You can view purchased answers in your profile page.\");\r\n                                        this.showPaymentForm = false;\r\n                                    });\r\n                            }\r\n                        },\r\n                        error => {\r\n                            console.log('credit payment error ' + error);\r\n                        }\r\n                    );\r\n            },\r\n            zipCode: true\r\n\r\n        });\r\n\r\n        handler.open({\r\n            name: 'Sharedmem',\r\n            description: 'Purchase Answer',\r\n            amount: this.answerView!.answer!.price * 100,\r\n        });\r\n    }\r\n\r\n    onAnswerUpdated(answer: Answer) {\r\n        // non null assertion: Guaraded by ngIf\r\n        this.answerView!.answer = answer;\r\n        this.isUpdateAnswerVisible = false;\r\n    }\r\n\r\n    onUpdateCancelled() {\r\n        this.isUpdateAnswerVisible = false;\r\n    }\r\n}\r\n\r\n\r\n","module.exports = \".content {\\r\\n    border: 1px solid #dfdfdf;\\r\\n    padding:1em;\\r\\n    overflow: auto;\\r\\n    min-height: 200px;\\r\\n}\\r\\n\\r\\n.content-toolbar {\\r\\n    border-top: 1px solid #dfdfdf;\\r\\n    border-left: 1px solid #dfdfdf;\\r\\n    border-right: 1px solid #dfdfdf;\\r\\n}\\r\\n\\r\\n.url-input {\\r\\n    margin-bottom: 0.25em;\\r\\n    margin-top: 0.25em;\\r\\n}\\r\\n\\r\\n[contenteditable]:focus {\\r\\n    outline: 0px solid transparent;\\r\\n}\\r\\n\\r\\n.btn.btn-secondary{\\r\\n    background-color:white;\\r\\n    border:none;\\r\\n    color:#808080;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"content-editor\\\">\\r\\n    <div class=\\\"btn-toolbar content-toolbar justify-content-between\\\"\\r\\n         role=\\\"toolbar\\\" aria-label=\\\"\\\">\\r\\n        <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"\\\">\\r\\n\\r\\n            <!--Hide/Redact content-->\\r\\n            <button *ngIf=\\\"enableRedaction\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    (click)=\\\"onRedact()\\\"\\r\\n                    class=\\\"btn btn-secondary\\\">\\r\\n                <s>Hide</s>\\r\\n            </button>\\r\\n\\r\\n            <!--Unhide content-->\\r\\n            <button *ngIf=\\\"enableRedaction\\\"\\r\\n                    type=\\\"button\\\"\\r\\n                    (click)=\\\"onUnRedact()\\\"\\r\\n                    class=\\\"btn btn-secondary\\\">\\r\\n                <em>Reveal</em>\\r\\n            </button>\\r\\n\\r\\n            <!--Format Bold-->\\r\\n            <button type=\\\"button\\\"\\r\\n                    (click)=\\\"onBold()\\\"\\r\\n                    class=\\\"btn btn-secondary\\\">\\r\\n                <b>B</b>\\r\\n            </button>\\r\\n\\r\\n            <!--Format Italic-->\\r\\n            <button type=\\\"button\\\"\\r\\n                    (click)=\\\"onItalic()\\\"\\r\\n                    class=\\\"btn btn-secondary\\\">\\r\\n                <i>I</i>\\r\\n            </button>\\r\\n\\r\\n            <!--Format Underline-->\\r\\n            <button type=\\\"button\\\"\\r\\n                    (click)=\\\"onUnderline()\\\"\\r\\n                    class=\\\"btn btn-secondary\\\">\\r\\n                <u>U</u>\\r\\n            </button>\\r\\n\\r\\n            <!--Create Bullet list/ Unordered list-->\\r\\n            <button type=\\\"button\\\"\\r\\n                    (click)=\\\"onUnorderedList()\\\"\\r\\n                    class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fas fa-list-ul\\\"></i>\\r\\n            </button>\\r\\n\\r\\n            <!--Create numbered list-->\\r\\n            <button type=\\\"button\\\"\\r\\n                    (click)=\\\"onOrderedList()\\\"\\r\\n                    class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fas fa-list-ol\\\"></i>\\r\\n            </button>\\r\\n\\r\\n            <!--Insert Link-->\\r\\n            <button type=\\\"button\\\"\\r\\n                    (click)=\\\"onShowInsertLink(insertLinkTemplate)\\\"\\r\\n                    class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"fas fa-link\\\"></i>\\r\\n            </button>\\r\\n\\r\\n            <!--Insert Image-->\\r\\n            <button type=\\\"button\\\"\\r\\n                    (click)=\\\"onShowInsertImage(insertImageTemplate)\\\"\\r\\n                    class=\\\"btn btn-secondary\\\">\\r\\n                <i class=\\\"far fa-image\\\"></i>\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n        <!--Insert Image-->\\r\\n        <!--div class=\\\"input-group\\\">\\r\\n            <input #x type=\\\"text\\\" class=\\\"form-control url-input\\\"\\r\\n                   placeholder=\\\"Image URL...\\\"\\r\\n                   [(ngModel)]=\\\"imgURL\\\"\\r\\n                   aria-describedby=\\\"btnGroupAddon\\\">\\r\\n            <div class=\\\"input-group-append url-input\\\">\\r\\n                <button (click)=\\\"onInsertImage()\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"input-group-text\\\">\\r\\n                    Insert\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n        </div-->\\r\\n    </div>\\r\\n\\r\\n    <div #el contenteditable=\\\"true\\\"\\r\\n         [focus]=\\\"emitFocusEvent\\\"\\r\\n         (blur)=\\\"onBlur()\\\"\\r\\n         class=\\\"content\\\"\\r\\n         [innerHTML]=\\\"curContent\\\"\\r\\n         (input)=\\\"newContent=el.innerHTML;onContentChange($event)\\\">\\r\\n        {{curContent}}\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Modal Template: Insert Link-->\\r\\n<ng-template #insertLinkTemplate>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <span class=\\\"modal-title pull-left\\\">Insert a link</span>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"insertLinkModal.hide()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"linkForm\\\"\\r\\n              (ngSubmit)=\\\"onInsertLink(linkForm.value)\\\">\\r\\n            <div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Link</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"link\\\"\\r\\n                               id=\\\"link\\\"\\r\\n                               formControlName=\\\"link\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"https://wwww.wikipedia.org\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\"\\r\\n                    [disabled]=\\\"!linkForm.valid\\\"\\r\\n                    class=\\\"btn btn-primary\\\">\\r\\n                Save\\r\\n            </button>\\r\\n        </form>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<!--Modal Template: Insert Image-->\\r\\n<ng-template #insertImageTemplate>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <span class=\\\"modal-title pull-left\\\">Insert an Image</span>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"insertImageModal.hide()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-2 col-form-label\\\">Url</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   [(ngModel)]=\\\"imageUrl\\\"\\r\\n                   class=\\\"form-control col-sm-6\\\"\\r\\n                   placeholder=\\\"image url\\\">\\r\\n                \\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                <input #fileInput\\r\\n                        type=\\\"file\\\"\\r\\n                        hidden\\r\\n                        (change)=\\\"onImageFileSelected($event)\\\">\\r\\n                <button type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-secondary\\\"\\r\\n                        (click)=\\\"fileInput.click()\\\">\\r\\n                    <i class=\\\"far fa-folder-open\\\"></i> Browse\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n        <button type=\\\"button\\\"\\r\\n                (click)=\\\"onInsertImage()\\\"\\r\\n                class=\\\"btn btn-primary\\\">\\r\\n            Insert\\r\\n        </button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\"","﻿import { Component, Inject, Input, Output, EventEmitter, AfterViewInit, TemplateRef } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser'\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\r\nimport { ImageStoreService } from '../../services/image-store.service';\r\nimport { Observable } from 'rxjs';\r\n\r\ninterface LinkFormData {\r\n    link: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'content-editor',\r\n    templateUrl: './contenteditor.component.html',\r\n    styleUrls:['./contenteditor.component.css'],\r\n})\r\nexport class ContentEditorComponent implements AfterViewInit{\r\n    editPosition: Range | undefined;\r\n    curContent: SafeHtml | undefined;\r\n    public newContent: string = \"\";\r\n    insertLinkModal: BsModalRef | undefined;\r\n    insertImageModal: BsModalRef | undefined;\r\n    linkForm: FormGroup | undefined;\r\n    private _enableRedaction: boolean = false;\r\n\r\n    @Output() contentChanged = new EventEmitter();\r\n    public emitFocusEvent = new EventEmitter<boolean>();\r\n\r\n    @Input()\r\n    set content(c: string) {\r\n        this.curContent = this.sanitizer.bypassSecurityTrustHtml(c);\r\n        this.newContent = c;\r\n    }\r\n\r\n    @Input()\r\n    set enableRedaction(e: boolean) {\r\n        this._enableRedaction = e;\r\n    }\r\n\r\n    get content() {\r\n        return this.newContent;\r\n    }\r\n\r\n    get enableRedaction() {\r\n        return this._enableRedaction;\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.emitFocusEvent.emit(true);\r\n        this.saveSelection();\r\n    }\r\n\r\n    baseUrl: string | undefined;\r\n\r\n    constructor(\r\n        @Inject('BASE_URL') baseUrl: string,\r\n        private sanitizer: DomSanitizer,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: BsModalService,\r\n        private imageStoreService: ImageStoreService,\r\n    ) {\r\n        this.enableRedaction = false;\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    onShowInsertLink(template: TemplateRef<any>) {\r\n\r\n        this.linkForm = this.formBuilder.group({\r\n            link: this.formBuilder.control('', Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n        });\r\n\r\n        const initialState = {\r\n        };\r\n        this.insertLinkModal = this.modalService.show(\r\n            template, { initialState }\r\n        );\r\n    }\r\n\r\n    onShowInsertImage(template: TemplateRef<any>) {\r\n        const initialState = {\r\n        };\r\n        this.insertImageModal = this.modalService.show(\r\n            template, { initialState }\r\n        );\r\n    }\r\n\r\n    onContentChange(event: any) {\r\n        this.contentChanged.emit(this.newContent); \r\n    }\r\n\r\n    saveSelection() {\r\n        if (window.getSelection) {\r\n            var sel = window.getSelection();\r\n            if (sel.getRangeAt && sel.rangeCount) {\r\n                this.editPosition = sel.getRangeAt(0);\r\n            }\r\n        } \r\n    }\r\n\r\n    restoreSelection() {\r\n        if (this.editPosition) {\r\n            if (window.getSelection) {\r\n                var sel = window.getSelection();\r\n                sel.removeAllRanges();\r\n                sel.addRange(this.editPosition);\r\n            } \r\n        }\r\n    }\r\n\r\n    selectedFile: File | undefined;\r\n    imageUrl: string | undefined;\r\n\r\n    onImageFileSelected(event: any) {\r\n        this.selectedFile = <File>event.target.files[0];\r\n        console.log(this.selectedFile);\r\n        this.imageUrl = this.selectedFile!.name;\r\n    }\r\n\r\n    upload(): Observable<any> {\r\n        const formData = new FormData();\r\n        formData.append('image', this.selectedFile!, this.selectedFile!.name);\r\n        return this.imageStoreService.upload(formData);\r\n    }\r\n\r\n    onInsertImage() {\r\n\r\n        this.restoreSelection();\r\n\r\n        if (this.imageUrl) {\r\n            let imageUrlLowerCase = this.imageUrl.toLowerCase();\r\n            if (imageUrlLowerCase.startsWith(\"http://\") || imageUrlLowerCase.startsWith(\"https://\")) {\r\n                var html = \"<img class='img-fluid' src='\" + this.imageUrl + \"'>\";\r\n                document.execCommand(\"insertHTML\", false, html);\r\n                // Guarded by ngIf\r\n                this.insertImageModal!.hide();\r\n            } else {\r\n                this.upload().subscribe(\r\n                    (imagePath) => {\r\n                        this.imageUrl = this.baseUrl!.concat(\"/api/imagestore/\").concat(imagePath);\r\n                        var html = \"<img class='img-fluid' src='\" + this.imageUrl + \"'>\";\r\n                        document.execCommand(\"insertHTML\", false, html);\r\n                        // Guarded by ngIf\r\n                        this.insertImageModal!.hide();\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onBlur() {\r\n        this.saveSelection();\r\n    }\r\n\r\n    onBold() {\r\n        this.formatText('bold');\r\n    }\r\n\r\n    onItalic() {\r\n        this.formatText('italic');\r\n    }\r\n\r\n    onRedact() {\r\n        document.execCommand(\"foreColor\", false, \"#d3d3d3\");\r\n        document.execCommand(\"hiliteColor\", false, \"#d3d3d3\");\r\n    }\r\n\r\n    onUnRedact() {\r\n        document.execCommand(\"hiliteColor\", false, \"#ffffff\");\r\n        document.execCommand(\"foreColor\", false, \"#000000\");\r\n    }\r\n\r\n    onUnderline() {\r\n        this.formatText('underline');\r\n    }\r\n\r\n    onUnorderedList() {\r\n        this.formatText('insertUnorderedList');\r\n    }\r\n\r\n    onOrderedList() {\r\n        this.formatText('insertOrderedList');\r\n    }\r\n\r\n    onInsertLink(formData: LinkFormData) {\r\n        this.restoreSelection();\r\n        var link = formData.link;\r\n        if (link.startsWith(\"http\")) {\r\n\r\n        } else {\r\n            link = \"https://\" + link;\r\n        }\r\n\r\n        document.execCommand('createLink', false, link);\r\n        // Guarded by ngIf\r\n        this.insertLinkModal!.hide();\r\n    }\r\n\r\n\r\n    formatText(command: string) {\r\n        document.execCommand(command, false, null);\r\n    }\r\n}","module.exports = \".list-item {\\r\\n    border-bottom: 1px solid #e5e5e5;\\r\\n    padding:1em;\\r\\n}\\r\\n\\r\\n.credential-text{\\r\\n    margin-left:1em;\\r\\n}\\r\\n\\r\\n.credential-footer{\\r\\n    padding:1em;\\r\\n    float:right;\\r\\n}\\r\\n\\r\\n.list-item-button{\\r\\n    width:100%;\\r\\n    background-color:white;\\r\\n    text-align:left;\\r\\n    color:dodgerblue;\\r\\n}\\r\\n\\r\\n.list-item-button:hover{\\r\\n    background-color:lightgray;\\r\\n}\\r\\n\\r\\n.button-label{\\r\\n    padding-left:1em;\\r\\n}\\r\\n\\r\\n.gray{\\r\\n    background-color:lightgray;\\r\\n}\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">{{name}}'s Credentials</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"selfModalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\\r\\n\\r\\n<!--Main modal showing current credentials-->\\r\\n<div>\\r\\n    <!--Modal Template: Popover for selecting credential type-->\\r\\n    <ng-template #popTemplate>\\r\\n        <button class=\\\"btn list-item list-item-button\\\"\\r\\n                (click)=\\\"onOpenAddEducation(educationAddTemplate)\\\">\\r\\n            <i class=\\\"fas fa-graduation-cap\\\"></i>\\r\\n            <span class=\\\"button-label\\\">Education</span>\\r\\n        </button>\\r\\n        <button class=\\\"btn list-item list-item-button\\\"\\r\\n                (click)=\\\"onOpenAddEmployment(employmentAddTemplate)\\\">\\r\\n            <i class=\\\"fas fa-briefcase\\\"></i>\\r\\n            <span class=\\\"button-label\\\">Employment</span>\\r\\n        </button>\\r\\n    </ng-template>\\r\\n    <button class=\\\"btn list-item list-item-button\\\"\\r\\n            [popover]=\\\"popTemplate\\\"\\r\\n            placement=\\\"bottom\\\"\\r\\n            [outsideClick]=\\\"true\\\">\\r\\n        <i class=\\\"fas fa-plus\\\"></i>\\r\\n        <span class=\\\"button-label\\\">Add a credential</span>\\r\\n    </button>\\r\\n    <div *ngIf=\\\"educations\\\">\\r\\n        <div *ngFor=\\\"let education of educations\\\" class=\\\"list-item\\\">\\r\\n            <i class=\\\"fas fa-graduation-cap\\\"></i>\\r\\n            <span class=\\\"credential-text\\\">\\r\\n                {{education.degreeType}} in {{education.concentration}}, {{education.school}}\\r\\n            </span>\\r\\n            <button class=\\\"btn btn-light btn-sm\\\"\\r\\n                    (click)=\\\"onOpenEditEducation(educationEditTemplate, education)\\\">\\r\\n                <i class=\\\"fas fa-pencil-alt\\\"></i> Edit\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"employments\\\">\\r\\n        <div *ngFor=\\\"let employment of employments\\\" class=\\\"list-item\\\">\\r\\n            <i class=\\\"fas fa-briefcase\\\"></i>\\r\\n            <span class=\\\"credential-text\\\">\\r\\n                {{employment.position}} at {{employment.company}}\\r\\n            </span>\\r\\n            <button class=\\\"btn btn-light btn-sm\\\"\\r\\n                    (click)=\\\"onOpenEditEmployment(employmentEditTemplate, employment)\\\">\\r\\n                <i class=\\\"fas fa-pencil-alt\\\"></i> Edit\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"credential-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"selfModalRef.hide()\\\">Close</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Modal Template: Adding Education-->\\r\\n<ng-template #educationAddTemplate>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <span class=\\\"modal-title pull-left\\\">Add education credential</span>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"educationAddModal.hide()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"educationAddForm\\\"\\r\\n              (ngSubmit)=\\\"onAddEducationSubmit(educationAddForm.value)\\\">\\r\\n            <div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">School</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"school\\\"\\r\\n                               id=\\\"school\\\"\\r\\n                               formControlName=\\\"school\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"North Carolina State University\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Concentration</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"concentration\\\"\\r\\n                               id=\\\"concentration\\\"\\r\\n                               formControlName=\\\"concentration\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"Computer Science\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Secondary Concentration</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"secondaryConcentration\\\"\\r\\n                               id=\\\"secondaryConcentration\\\"\\r\\n                               formControlName=\\\"secondaryConcentration\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Degree Type</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"degreeType\\\"\\r\\n                               id=\\\"degreeType\\\"\\r\\n                               formControlName=\\\"degreeType\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"MS\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Graduation Year</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"graduationYear\\\"\\r\\n                               id=\\\"graduationYear\\\"\\r\\n                               formControlName=\\\"graduationYear\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"2006\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\"\\r\\n                    [disabled]=\\\"!educationAddForm.valid\\\"\\r\\n                    class=\\\"btn btn-primary\\\">\\r\\n                Save\\r\\n            </button>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"credential-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"educationAddModal.hide()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<!--Modal Template: Editing Education-->\\r\\n<ng-template #educationEditTemplate>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <span class=\\\"modal-title pull-left\\\">Edit education credential</span>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"educationEditModal.hide()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"educationEditForm\\\"\\r\\n              (ngSubmit)=\\\"onEditEducationSubmit(educationEditForm.value)\\\">\\r\\n            <div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">School</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"school\\\"\\r\\n                               id=\\\"school\\\"\\r\\n                               formControlName=\\\"school\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"North Carolina State University\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Concentration</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"concentration\\\"\\r\\n                               id=\\\"concentration\\\"\\r\\n                               formControlName=\\\"concentration\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"Computer Science\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Secondary Concentration</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"secondaryConcentration\\\"\\r\\n                               id=\\\"secondaryConcentration\\\"\\r\\n                               formControlName=\\\"secondaryConcentration\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Degree Type</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"degreeType\\\"\\r\\n                               id=\\\"degreeType\\\"\\r\\n                               formControlName=\\\"degreeType\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"MS\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Graduation Year</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"graduationYear\\\"\\r\\n                               id=\\\"graduationYear\\\"\\r\\n                               formControlName=\\\"graduationYear\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"2006\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\"\\r\\n                    [disabled]=\\\"!educationEditForm.valid\\\"\\r\\n                    class=\\\"btn btn-primary\\\">\\r\\n                Save\\r\\n            </button>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"credential-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"educationEditModal.hide()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<!--Modal Template: Adding Employment-->\\r\\n<ng-template #employmentAddTemplate>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <span class=\\\"modal-title pull-left\\\">Add employment credential</span>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"employmentAddModal.hide()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"employmentAddForm\\\"\\r\\n              (ngSubmit)=\\\"onAddEmploymentSubmit(employmentAddForm.value)\\\">\\r\\n            <div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Company</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"company\\\"\\r\\n                               id=\\\"company\\\"\\r\\n                               formControlName=\\\"company\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"SharedMem Inc.\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Position</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"position\\\"\\r\\n                               id=\\\"position\\\"\\r\\n                               formControlName=\\\"position\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"CEO\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">I currently work here</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"isCurrent\\\"\\r\\n                               id=\\\"isCurrent\\\"\\r\\n                               formControlName=\\\"isCurrent\\\"\\r\\n                               type=\\\"checkbox\\\"\\r\\n                               class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\"\\r\\n                    [disabled]=\\\"!employmentAddForm.valid\\\"\\r\\n                    class=\\\"btn btn-primary\\\">\\r\\n                Save\\r\\n            </button>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"credential-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"employmentAddModal.hide()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<!--Modal Template: Editing Employment-->\\r\\n<ng-template #employmentEditTemplate>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <span class=\\\"modal-title pull-left\\\">Edit employment credential</span>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"employmentEditModal.hide()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"employmentEditForm\\\"\\r\\n              (ngSubmit)=\\\"onEditEmploymentSubmit(employmentEditForm.value)\\\">\\r\\n            <div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Company</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"company\\\"\\r\\n                               id=\\\"company\\\"\\r\\n                               formControlName=\\\"company\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"SharedMem Inc.\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">Position</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"position\\\"\\r\\n                               id=\\\"position\\\"\\r\\n                               formControlName=\\\"position\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               placeholder=\\\"CEO\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-sm-4 col-form-label\\\">I currently work here</label>\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <input name=\\\"isCurrent\\\"\\r\\n                               id=\\\"isCurrent\\\"\\r\\n                               formControlName=\\\"isCurrent\\\"\\r\\n                               type=\\\"checkbox\\\"\\r\\n                               class=\\\"form-control\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\"\\r\\n                    [disabled]=\\\"!employmentEditForm.valid\\\"\\r\\n                    class=\\\"btn btn-primary\\\">\\r\\n                Save\\r\\n            </button>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"credential-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"employmentEditModal.hide()\\\">Close</button>\\r\\n    </div>\\r\\n</ng-template>\"","import { Component, TemplateRef, OnInit } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { Education, Employment, ApplicationUserService, Credentials } from '../../services/application-user.service';\r\n\r\n@Component({\r\n    selector: 'credential-editor',\r\n    templateUrl: './credentials-editor.component.html',\r\n    styleUrls: ['./credentials-editor.component.css']\r\n})\r\nexport class CredentialsEditorComponent implements OnInit {\r\n    name: string = \"\";\r\n    userId: number | undefined;\r\n    educations: Education[] = [];\r\n    employments: Employment[] = [];\r\n\r\n    educationAddModal: BsModalRef | undefined;\r\n    educationEditModal: BsModalRef | undefined;\r\n    employmentAddModal: BsModalRef | undefined;\r\n    employmentEditModal: BsModalRef | undefined;\r\n\r\n    educationAddForm: FormGroup | undefined;\r\n    educationEditForm: FormGroup | undefined;\r\n    employmentAddForm: FormGroup | undefined;\r\n    employmentEditForm: FormGroup | undefined;\r\n\r\n    constructor(\r\n        private profileService: ApplicationUserService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: BsModalService,\r\n        public selfModalRef: BsModalRef) {\r\n    }\r\n\r\n    onOpenAddEducation(template: TemplateRef<any>) {\r\n\r\n        this.educationAddForm = this.formBuilder.group({\r\n            school: this.formBuilder.control('', Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n            concentration: this.formBuilder.control('', Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n            secondaryConcentration: this.formBuilder.control(''),\r\n            degreeType: this.formBuilder.control(''),\r\n            graduationYear: this.formBuilder.control(''),\r\n        });\r\n\r\n        const initialState = {\r\n            name: this.name\r\n        };\r\n        this.educationAddModal = this.modalService.show(\r\n            template, { initialState }\r\n        );\r\n    }\r\n\r\n    onOpenEditEducation(template: TemplateRef<any>, education: Education) {\r\n        const initialState = {\r\n            name: this.name\r\n        };\r\n\r\n        this.educationEditForm = this.formBuilder.group({\r\n            id: this.formBuilder.control(education.id),\r\n            school: this.formBuilder.control(education.school, Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n            concentration: this.formBuilder.control(education.concentration, Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n            secondaryConcentration: this.formBuilder.control(education.secondaryConcentration),\r\n            degreeType: this.formBuilder.control(education.degreeType),\r\n            graduationYear: this.formBuilder.control(education.graduationYear),\r\n        });\r\n\r\n        this.educationEditModal = this.modalService.show(\r\n            template, { initialState }\r\n        );\r\n    }\r\n\r\n    onOpenAddEmployment(template: TemplateRef<any>) {\r\n        this.employmentAddForm = this.formBuilder.group({\r\n            company: this.formBuilder.control('', Validators.compose([Validators.required])),\r\n            position: this.formBuilder.control('', Validators.compose([Validators.required])),\r\n            isCurrent: this.formBuilder.control(''),\r\n        });\r\n\r\n        const initialState = {\r\n            name: this.name\r\n        };\r\n        this.employmentAddModal = this.modalService.show(\r\n            template, { initialState }\r\n        );\r\n    }\r\n\r\n    onOpenEditEmployment(template: TemplateRef<any>, employment: Employment) {\r\n        const initialState = {\r\n            name: this.name\r\n        };\r\n\r\n        this.employmentEditForm = this.formBuilder.group({\r\n            id: this.formBuilder.control(employment.id),\r\n            company: this.formBuilder.control(employment.company, Validators.compose([Validators.required])),\r\n            position: this.formBuilder.control(employment.position, Validators.compose([Validators.required])),\r\n            isCurrent: this.formBuilder.control(employment.isCurrent),            \r\n        });\r\n\r\n        this.employmentEditModal = this.modalService.show(\r\n            template, { initialState }\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadCredentials();\r\n    }\r\n\r\n    onAddEducationSubmit(education: Education) {\r\n        this.profileService.addEducaion(education)\r\n            .subscribe(() => {\r\n                this.educationAddModal!.hide();\r\n                this.loadCredentials();\r\n            }\r\n        );\r\n    }\r\n\r\n    onEditEducationSubmit(education: Education) {\r\n        this.profileService.updateEducaion(education)\r\n            .subscribe(() => {\r\n                this.educationEditModal!.hide();\r\n                this.loadCredentials();\r\n            }\r\n        );\r\n    }\r\n\r\n    onAddEmploymentSubmit(employment: Employment) {\r\n        this.profileService.addEmployment(employment)\r\n            .subscribe(() => {\r\n                this.employmentAddModal!.hide();\r\n                this.loadCredentials();\r\n            }\r\n        );\r\n    }\r\n\r\n    onEditEmploymentSubmit(employment: Employment) {\r\n        this.profileService.updateEmployment(employment)\r\n            .subscribe(() => {\r\n                this.employmentEditModal!.hide();\r\n                this.loadCredentials();\r\n            }\r\n        );\r\n    }\r\n\r\n    loadCredentials() {\r\n        this.profileService.getCredentials(this.userId).subscribe(\r\n            (credentials: Credentials) => {\r\n                this.educations = [];\r\n                this.employments = [];\r\n                credentials.educations.forEach((e) => { this.educations.push(e); });\r\n                credentials.employments.forEach((e) => { this.employments.push(e); });\r\n            }\r\n        );\r\n        \r\n    }\r\n}\r\n","module.exports = \".list-item {\\r\\n    border-bottom: 1px solid #e5e5e5;\\r\\n    padding:1em;\\r\\n}\\r\\n\\r\\n.credential-text{\\r\\n    margin-left:1em;\\r\\n}\\r\\n\\r\\n.credential-footer{\\r\\n    padding:1em;\\r\\n    float:right;\\r\\n}\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">{{name}}'s Credentials</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\\r\\n<div>\\r\\n    <div *ngIf=\\\"educations\\\">\\r\\n        <div *ngFor=\\\"let education of educations\\\" class=\\\"list-item\\\">\\r\\n            <i class=\\\"fas fa-graduation-cap\\\"></i>\\r\\n            <span class=\\\"credential-text\\\">\\r\\n                {{education.degreeType}} in {{education.concentration}}, {{education.school}}\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"employments\\\">\\r\\n        <div *ngFor=\\\"let employment of employments\\\" class=\\\"list-item\\\">\\r\\n            <i class=\\\"fas fa-briefcase\\\"></i>\\r\\n            <span class=\\\"credential-text\\\">\\r\\n                {{employment.position}} at {{employment.company}}\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"credential-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"bsModalRef.hide()\\\">Close</button>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport { OnInit } from '@angular/core/src/metadata/lifecycle_hooks';\r\nimport { Education, Employment } from '../../services/application-user.service';\r\n\r\n@Component({\r\n    selector: 'credential-readonly',\r\n    templateUrl: './credentials-readonly.component.html',\r\n    styleUrls: ['./credentials-readonly.component.css']\r\n})\r\nexport class CredentialsReadonlyComponent implements OnInit {\r\n    name: string = \"\";\r\n    educations: Education[] = [];\r\n    employments: Employment[] = [];\r\n\r\n    constructor(public bsModalRef: BsModalRef) { }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n}\r\n","module.exports = \".question-list{\\r\\n    padding-top:0.25em;\\r\\n}\"","module.exports = \"<p *ngIf=\\\"!questionViews\\\" class=\\\"col\\\"><em>Loading...</em></p>\\r\\n\\r\\n<div *ngIf=\\\"questionViews\\\" class=\\\"question-list\\\">\\r\\n    <div *ngFor=\\\"let questionView of questionViews\\\">\\r\\n        <question-card [questionView]=\\\"questionView\\\">\\r\\n        </question-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { QuestionService, UserSpecificQuestionPreview } from '../../services/questions.service'\r\n\r\n@Component({\r\n    selector: 'display-questions',\r\n    templateUrl: './displayquestions.component.html',\r\n    styleUrls: ['./displayquestions.component.css'],\r\n})\r\n\r\nexport class DisplayQuestionsComponent {\r\n    questionViews: UserSpecificQuestionPreview[] | undefined;\r\n\r\n    constructor(\r\n        private questionService: QuestionService) {\r\n        this.questionService.get().subscribe(\r\n            (result: UserSpecificQuestionPreview[]) => {\r\n                this.questionViews = result;\r\n            },\r\n            (error:string) => console.error(error)\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n","module.exports = \".home-page {\\r\\n    background-color: #e0e0e0;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"home-page\\\">\\r\\n    <div class=\\\"offset-md-1 col-md-9\\\">\\r\\n        <form class=\\\"pt-2\\\">\\r\\n            <input type=\\\"text\\\" placeholder=\\\"Search\\\" class=\\\"pl-2\\\" size=\\\"50\\\">\\r\\n        </form>\\r\\n        <display-questions>\\r\\n        </display-questions>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls:['./home.component.css'],\r\n})\r\nexport class HomeComponent {\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<div [innerHTML]=\\\"safeHtmlContent\\\">\\r\\n</div>\"","﻿import { Component, Input } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser'\r\n\r\n@Component({\r\n    selector: 'html-content',\r\n    templateUrl: './html-content.component.html',\r\n    styleUrls: ['./html-content.component.css'],\r\n})\r\n\r\nexport class HtmlContentComponent {\r\n    safeHtmlContent: SafeHtml | undefined;\r\n\r\n    @Input()\r\n    set htmlString(html: string) {\r\n        this.safeHtmlContent =\r\n            this.sanitizer.bypassSecurityTrustHtml(html);\r\n    }\r\n\r\n    constructor(\r\n        private sanitizer: DomSanitizer\r\n    ) {\r\n    }\r\n}\r\n\r\n\r\n","module.exports = \".content {\\r\\n    border: 1px solid #dfdfdf;\\r\\n    overflow: auto;\\r\\n    padding: 0.25em;\\r\\n    font-family: Georgia;\\r\\n    font-size: x-large;\\r\\n    font-weight: 700;\\r\\n}\\r\\n\\r\\n[contenteditable]:focus {\\r\\n    outline: 0px solid transparent;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div #el contenteditable=\\\"true\\\"\\r\\n        [focus]=\\\"emitFocusEvent\\\"\\r\\n        class=\\\"content\\\"\\r\\n        [innerHTML]=\\\"curContent\\\"\\r\\n        (input)=\\\"newContent=el.innerHTML;onContentChange($event)\\\">\\r\\n    {{curContent}}\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","﻿import { Component, Inject, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser'\r\n\r\n\r\n@Component({\r\n    selector: 'inline-text-editor',\r\n    templateUrl: './inlinetexteditor.component.html',\r\n    styleUrls:['./inlinetexteditor.component.css'],\r\n})\r\nexport class InlineTextEditorComponent implements AfterViewInit{\r\n    curContent: SafeHtml | undefined;\r\n    public newContent: string = \"\";\r\n    @Output() contentChanged = new EventEmitter();\r\n    public emitFocusEvent = new EventEmitter<boolean>();\r\n\r\n    @Input()\r\n    set content(c: string) {\r\n        this.curContent = this.sanitizer.bypassSecurityTrustHtml(c);\r\n        this.newContent = c;\r\n    }\r\n\r\n    get content() {\r\n        return this.newContent;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.emitFocusEvent.emit(true);\r\n    }\r\n\r\n    constructor(private sanitizer: DomSanitizer) {\r\n    }\r\n\r\n    onContentChange(event: any) {\r\n        this.contentChanged.emit(this.newContent); \r\n    }\r\n}","module.exports = \".landing-page {\\r\\n    font-family: \\\"Helvetica Neue\\\";\\r\\n}\\r\\n\\r\\n.center-align {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.company-name {\\r\\n    font-size: 2em;\\r\\n    padding-top:1em;\\r\\n    padding-bottom:2em;\\r\\n}\\r\\n\\r\\n.motto-text {\\r\\n    font-size: 1.5em;\\r\\n    padding-bottom:3em;\\r\\n}\\r\\n\\r\\n.login-control{\\r\\n    margin:0.5em;\\r\\n    padding:0.25em;\\r\\n}\\r\\n\\r\\n.login-form{\\r\\n    padding-top:0.5em;\\r\\n}\\r\\n\\r\\n.separator-dot {\\r\\n    font-size: 2em;\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"landing-page\\\">\\r\\n    <div class=\\\"company-name center-align\\\">\\r\\n        Shared Mem\\r\\n    </div>\\r\\n    <div class=\\\"motto-text center-align\\\">\\r\\n        Ask any question. No restrictions.\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"state==0\\\" class=\\\"pb-4 center-align\\\">\\r\\n        <button class=\\\"btn btn-sm btn-light\\\"\\r\\n                (click)=\\\"onShowRegistration()\\\">\\r\\n            Sign up\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"state==1\\\" class=\\\"center-align\\\">\\r\\n        <registration-form (registrationCompleted)=\\\"onRegistrationCompleted()\\\">\\r\\n        </registration-form>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"state==0\\\">\\r\\n        <login-form (loggedIn)=\\\"onLoggedIn($event)\\\"\\r\\n                    (showRegistration)=\\\"onShowRegistration()\\\">\\r\\n        </login-form>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"center-align pt-5 mt-5\\\">\\r\\n        <button class=\\\"btn btn-sm btn-link\\\">About</button>\\r\\n        <span class=\\\"separator-dot\\\">.</span>\\r\\n        <button class=\\\"btn btn-sm btn-link\\\">Terms</button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'landing-page',\r\n    templateUrl: './landingpage.component.html',\r\n    styleUrls: ['./landingpage.component.css']\r\n})\r\nexport class LandingPageComponent {\r\n\r\n    // 0: login form\r\n    // 1: registration form\r\n    // 2: Request invitation form\r\n    state: number = 0;\r\n\r\n\r\n    @Output() loggedIn = new EventEmitter();\r\n\r\n    constructor(\r\n        private router: Router) {\r\n\r\n        this.router.onSameUrlNavigation = 'reload';\r\n    }\r\n\r\n    onRegistrationCompleted() {\r\n        this.state = 0;\r\n    }\r\n\r\n    onLoggedIn(event: Event) {\r\n        this.loggedIn.emit(event);\r\n    }\r\n\r\n    onShowLogin() {\r\n        this.state = 0;\r\n    }\r\n\r\n    onShowRegistration() {\r\n        this.state = 1;\r\n    }\r\n\r\n    onRequestInvite() {\r\n        this.state = 2;\r\n    }\r\n\r\n    onInviteReqSubmitted() {\r\n        this.state = 0;\r\n    }\r\n\r\n}\r\n","module.exports = \".login-control{\\r\\n    margin:0.25em;\\r\\n    padding:0.25em;\\r\\n}\\r\\n\\r\\n.login-form{\\r\\n    padding-top:0.5em;\\r\\n    background-color:ghostwhite;\\r\\n}\\r\\n\\r\\ninput:-webkit-autofill {\\r\\n    -webkit-box-shadow: 0 0 0 30px white inset;\\r\\n}\\r\\n\\r\\n.engraved-text {\\r\\n    font-size:20px;\\r\\n    font-family: Futura;\\r\\n    background-color: #666666;\\r\\n    -webkit-background-clip: text;\\r\\n    background-clip: text;\\r\\n    color: transparent;\\r\\n    text-shadow: rgba(245,245,245,0.5) 3px 5px 1px;\\r\\n}\"","module.exports = \"<div class=\\\"text-center\\\">\\r\\n    <form [formGroup]=\\\"form\\\"\\r\\n          (ngSubmit)=\\\"onSubmit(form.value)\\\">\\r\\n\\r\\n        <div>\\r\\n            <input type=\\\"text\\\"\\r\\n                   autofocus\\r\\n                   autocomplete=\\\"on\\\"\\r\\n                   class=\\\"login-control\\\"\\r\\n                   placeholder=\\\"Email\\\"\\r\\n                   name=\\\"email\\\" id=\\\"email\\\"\\r\\n                   formControlName=\\\"Email\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"mb-3\\\">\\r\\n            <input type=\\\"password\\\"\\r\\n                   autocomplete=\\\"on\\\"\\r\\n                   class=\\\"login-control\\\"\\r\\n                   placeholder=\\\"Password\\\"\\r\\n                   name=\\\"password\\\" id=\\\"password\\\"\\r\\n                   formControlName=\\\"Password\\\" />            \\r\\n        </div>\\r\\n        <div>\\r\\n            <button type=\\\"submit\\\"\\r\\n                    class=\\\"btn btn-sm btn-light\\\">\\r\\n                Login\\r\\n            </button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { IdentityService, LoginCredential } from '../../services/identity.service';\r\nimport { User } from '../../models/User';\r\n\r\n@Component({\r\n    selector: 'login-form',\r\n    templateUrl: './loginform.component.html',\r\n    styleUrls: ['./loginform.component.css']\r\n})\r\nexport class LoginFormComponent {\r\n\r\n    @Output() loggedIn = new EventEmitter();\r\n    form: FormGroup | undefined;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private identityService: IdentityService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            Email: this.formBuilder.control('', Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n            Password: this.formBuilder.control('', Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n        });\r\n    }\r\n\r\n\r\n    onSubmit(loginForm: LoginCredential) {\r\n        this.identityService.login(loginForm).subscribe(\r\n            (user: User) => {\r\n                if (user) {\r\n                    this.loggedIn.emit(user);\r\n                } else {\r\n                    alert(\"Login Failed.\");\r\n                }\r\n            },\r\n            error => {\r\n                alert(\"Login failed: \" + error);\r\n            }\r\n        );\r\n    }\r\n}\r\n","module.exports = \".navbar-brand {\\r\\n    color: black;\\r\\n    font-family: \\\"Helvetica Neue\\\";\\r\\n    font-weight: 600;\\r\\n    font-size: x-large;\\r\\n}\\r\\n\\r\\n.nav-item {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.navbar {\\r\\n    border-bottom: 1px solid #e2e0e0;\\r\\n}\\r\\n\\r\\n.notification-badge {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.notification-badge[data-badge]:after {\\r\\n    content: attr(data-badge);\\r\\n    position: absolute;\\r\\n    top: 2px;\\r\\n    right: -2px;\\r\\n    font-size: .7em;\\r\\n    background: #b70000;\\r\\n    color: white;\\r\\n    width: 18px;\\r\\n    height: 18px;\\r\\n    text-align: center;\\r\\n    line-height: 18px;\\r\\n    border-radius: 50%;\\r\\n    box-shadow:none;\\r\\n}\\r\\n\\r\\n.notification-parent{\\r\\n    position:relative;\\r\\n}\\r\\n\\r\\n.notification-popover{\\r\\n    position:absolute;\\r\\n    left:0px;\\r\\n    top:2.5em;\\r\\n}\\r\\n\\r\\n.pointer-cursor {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar fixed-top navbar-expand-md navbar-light bg-white\\\">\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\"\\r\\n            data-toggle=\\\"collapse\\\"\\r\\n            data-target=\\\"#navbarSupportedContent\\\"\\r\\n            aria-controls=\\\"navbarSupportedContent\\\"\\r\\n            aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse offset-md-1 col-md-9\\\" id=\\\"navbarSupportedContent\\\">\\r\\n\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n            <li [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">\\r\\n                    SharedMem\\r\\n                </a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item active\\\"\\r\\n                [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">\\r\\n                    <i class=\\\"fas fa-home\\\"></i>\\r\\n                    Home\\r\\n                </a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\"\\r\\n                [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/add-question-form']\\\">\\r\\n                    <i class=\\\"far fa-edit\\\"></i>\\r\\n                    Ask\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n        <ul class=\\\"navbar-nav\\\">\\r\\n            <li class=\\\"nav-item dropdown\\\"\\r\\n                [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                <div class=\\\"notification-parent\\\">\\r\\n                    <a [ngClass]=\\\"{'nav-link': true, 'notification-badge': notifications.length, 'pointer-cursor': true}\\\"\\r\\n                       attr.data-badge={{notifications.length}}\\r\\n                       (click)=\\\"toggleNotification()\\\">\\r\\n                        <i class=\\\"far fa-bell\\\"></i>\\r\\n                        Notifications\\r\\n                    </a>\\r\\n                    <div class=\\\"notification-popover\\\" \\r\\n                         *ngIf=\\\"isNotificationsVisible\\\">\\r\\n                        <notification-popover [notifications]=\\\"notifications\\\"\\r\\n                                              (notificationDismissed)=\\\"onNotificationDismissed()\\\"\\r\\n                                              (notificationClicked)=\\\"onNotificationClicked($event)\\\"\\r\\n                                              (notificationAllMarkedSeen)=\\\"onNotificationAllMarkedSeen()\\\">\\r\\n                        </notification-popover>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </li>\\r\\n\\r\\n            <li class=\\\"nav-item\\\"\\r\\n                *ngIf=\\\"user\\\"\\r\\n                [routerLinkActive]=\\\"['link-active']\\\">\\r\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">\\r\\n                    <i class=\\\"far fa-user\\\"></i>\\r\\n                    {{user.name}}\\r\\n                </a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\"\\r\\n                   [routerLink]=\\\"['/home']\\\"\\r\\n                   (click)=\\\"logoutClick()\\\">\\r\\n                    Logout\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n</nav>\\r\\n\\r\\n<script>\\r\\n$(document).ready(function(){\\r\\n    $('[data-toggle=\\\"popover\\\"]').popover();\\r\\n});\\r\\n</script>\\r\\n\"","import { Component, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\r\n\r\nimport { User } from '../../models/User';\r\nimport { Notification, NotificationService } from '../../services/notification.service'\r\n\r\n@Component({\r\n    selector: 'nav-menu',\r\n    templateUrl: './navmenu.component.html',\r\n    styleUrls: ['./navmenu.component.css']\r\n})\r\nexport class NavMenuComponent implements AfterViewInit{\r\n    private _user: User | undefined;\r\n    isNotificationsVisible: boolean = false;\r\n    notifications: Notification[] = [];\r\n\r\n    @Output() loggedOut = new EventEmitter();\r\n\r\n    constructor(private notificationService: NotificationService) {\r\n    }\r\n\r\n    onNotificationDismissed() {\r\n        this.isNotificationsVisible = false;\r\n    }\r\n\r\n    toggleNotification() {\r\n        this.isNotificationsVisible = !this.isNotificationsVisible;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n\r\n        let protocol = location.protocol === \"https:\" ? \"wss:\" : \"ws:\";\r\n        let port = document.location.port ? (\":\" + document.location.port) : \"\";\r\n        let webSocketURL = protocol + \"//\" + document.location.hostname + port + \"/api/Notifications/ws\";\r\n\r\n        var socket = new WebSocket(webSocketURL);\r\n        socket.onopen = function (event) {\r\n            console.log(\"connection open!\");\r\n        };\r\n\r\n        socket.onclose = function (event) {\r\n            console.log(\"webscocket closed.\");\r\n        };\r\n        socket.onerror = function (event) {\r\n            console.log(\"websocket errror.\");\r\n        };\r\n        socket.onmessage = (event) => {\r\n            var data = event.data;\r\n            if (data != \"ping\")\r\n            {\r\n                //var notification = JSON.parse(data) as Notification;\r\n                //this.notifications.push(notification);\r\n                this.loadNotifications();\r\n            }\r\n        };\r\n\r\n        this.loadNotifications();\r\n    }\r\n\r\n    @Input()\r\n    set user(u: User | undefined) {\r\n        this._user = u;\r\n    }\r\n\r\n    getUserId(): (number | undefined) {\r\n        if (this.user) {\r\n            return this.user.id;\r\n        }\r\n       \r\n    }\r\n\r\n    get user(): (User | undefined) {\r\n        return this._user;\r\n    }\r\n\r\n\r\n    logoutClick() {\r\n        this.loggedOut.emit();\r\n    }\r\n\r\n    loadNotifications() {\r\n        this.notificationService.getUnseen()\r\n            .subscribe(result => {\r\n                this.notifications = result as Notification[];\r\n                console.log(`Loaded ${this.notifications.length} notifications`);\r\n            }, error => console.error(error));\r\n    }\r\n\r\n    onNotificationAllMarkedSeen() {\r\n        this.notificationService.markAllAsSeen()\r\n            .subscribe(result => { this.loadNotifications(); });\r\n    }\r\n\r\n    onNotificationClicked(id: number) {\r\n        this.notificationService.markAsSeen(id)\r\n            .subscribe(result => { this.loadNotifications(); });\r\n    }\r\n\r\n}\r\n","module.exports = \".pointer-cursor {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.notification-content {\\r\\n    padding: 1em;\\r\\n    overflow-y: scroll;\\r\\n    height: auto;\\r\\n    max-height: 300px;\\r\\n}\\r\\n\\r\\n.arrow_box {\\r\\n    position: relative;\\r\\n    background: white;\\r\\n    border: 1px solid lightgray;\\r\\n    width: 400px;\\r\\n    height: auto;\\r\\n    border-radius:5px;\\r\\n}\\r\\n\\r\\n.arrow_box:after, .arrow_box:before {\\r\\n        bottom: 100%;\\r\\n        left: 20%;\\r\\n        border: solid transparent;\\r\\n        content: \\\" \\\";\\r\\n        height: 0;\\r\\n        width: 0;\\r\\n        position: absolute;\\r\\n        pointer-events: none;\\r\\n    }\\r\\n\\r\\n.arrow_box:after {\\r\\n        border-color: rgba(136, 183, 213, 0);\\r\\n        border-bottom-color: white;\\r\\n        border-width: 5px;\\r\\n        margin-left: -5px;\\r\\n    }\\r\\n\\r\\n.arrow_box:before {\\r\\n        border-color: rgba(194, 225, 245, 0);\\r\\n        border-bottom-color: lightgray;\\r\\n        border-width: 7px;\\r\\n        margin-left: -7px;\\r\\n    }\\r\\n\\r\\na:link {\\r\\n    color: black;\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n/* visited link */\\r\\n\\r\\na:visited {\\r\\n    color: black;\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n/* mouse over link */\\r\\n\\r\\na:hover {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n/* selected link */\\r\\n\\r\\na:active {\\r\\n    color: blue;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"visible\\\" class=\\\"arrow_box\\\">\\r\\n    <div class=\\\"notification-content\\\">\\r\\n        <div *ngIf=\\\"!notifications.length\\\" class=\\\"text-center\\\">\\r\\n            <span class=\\\"text-muted\\\">No unread notifications.</span>\\r\\n        </div>\\r\\n        <button *ngIf=\\\"notifications.length\\\"\\r\\n                (click)=\\\"onMarkAllReadClick()\\\"\\r\\n                class=\\\"btn btn-light\\\">\\r\\n            Mark all as read\\r\\n        </button>\\r\\n        <hr />\\r\\n        <div *ngFor=\\\"let notification of notifications\\\">\\r\\n            <p class=\\\"pointer-cursor\\\" (click)=\\\"onNotificationClick(notification.id)\\\">\\r\\n                <a href={{notification.link}}>\\r\\n                    {{notification.eventDescription}}\\r\\n                </a>\\r\\n            </p>\\r\\n            <hr />\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, Input, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { Notification } from '../../services/notification.service'\r\n\r\n@Component({\r\n    selector: 'notification-popover',\r\n    templateUrl: './notification-popover.component.html',\r\n    styleUrls: ['./notification-popover.component.css'],\r\n    host: {\r\n        '(document:click)': 'onClick($event)',\r\n    },\r\n})\r\nexport class NotificationPopoverComponent{\r\n    private fistClick: boolean = true;\r\n    visible: boolean = true;\r\n\r\n    @Input() notifications: Notification[] = [];\r\n\r\n    @Output() notificationDismissed = new EventEmitter();\r\n    @Output() notificationClicked = new EventEmitter<number>();\r\n    @Output() notificationAllMarkedSeen = new EventEmitter<number>();\r\n\r\n    constructor(\r\n        private _eref: ElementRef\r\n    ) {\r\n        this.visible = true;\r\n        this.fistClick = true;\r\n    }\r\n\r\n    onMarkAllReadClick() {\r\n        this.notificationAllMarkedSeen.emit();\r\n    }\r\n\r\n    onNotificationClick(id: number) {\r\n        this.notificationClicked.emit(id);\r\n    }\r\n\r\n    onClick(event:any) {\r\n        if (!this._eref.nativeElement.contains(event.target)) {\r\n            if (!this.fistClick) {\r\n                this.notificationDismissed.emit();\r\n                this.visible = false;\r\n            }\r\n            else {\r\n                this.fistClick = false;\r\n            }\r\n        }\r\n            \r\n    }\r\n\r\n}\r\n","module.exports = \".answer-content {\\r\\n    margin: 1em;\\r\\n    text-align:justify;\\r\\n}\\r\\n\\r\\n.section-heading{\\r\\n    margin-top:1em;\\r\\n    margin-bottom:1em;\\r\\n    font-weight:lighter;\\r\\n    font-size:larger;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"!purchasedAnswerViews\\\">\\r\\n    <em>Loading your purchased answers ...</em>\\r\\n</div>\\r\\n<div *ngIf=\\\"purchasedAnswerViews\\\">\\r\\n    <div class=\\\"section-heading\\\">\\r\\n        Your Purchased Answers\\r\\n    </div>\\r\\n    <div *ngFor=\\\"let purchasedAnswerView of purchasedAnswerViews\\\">\\r\\n        <h5>\\r\\n            {{purchasedAnswerView.question.title}}\\r\\n        </h5>\\r\\n        <html-content [htmlString]=\\\"removeRedactionMarkers(purchasedAnswerView.purchasedAnswer.htmlContent)\\\"\\r\\n                      class=\\\"answer-content\\\">\\r\\n        </html-content>\\r\\n        <hr />\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"","﻿import { Component, OnInit, Output } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RedactorService } from '../../services/redactor.service';\r\nimport { PurchasedAnswerService, PurchasedAnswer, PurchasedAnswerView } from '../../services/purchased-answers.service';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser'\r\n\r\n@Component({\r\n    selector: 'purchased-answers',\r\n    templateUrl: './purchased-answers.component.html',\r\n    styleUrls: ['./purchased-answers.component.css']\r\n})\r\n\r\nexport class PurchasedAnswersComponent {\r\n\r\n    purchasedAnswerViews: PurchasedAnswerView[] | undefined;\r\n\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute,\r\n        private purchasedAnswerService: PurchasedAnswerService,\r\n        private sanitizer: DomSanitizer,\r\n        private redactorService: RedactorService,\r\n    ) {\r\n        this.loadPurchasedAnswers();\r\n    }\r\n\r\n    loadPurchasedAnswers() {\r\n        this.purchasedAnswerService.get().subscribe(\r\n            (response: PurchasedAnswerView[]) => {\r\n                this.purchasedAnswerViews = response;\r\n            }\r\n        );\r\n    }\r\n\r\n    removeRedactionMarkers(html: string) {\r\n        return this.redactorService.getRedactionMarkersFreeHtml(html);\r\n    }\r\n}\r\n","module.exports = \".card-body {\\r\\n    background-color: white;\\r\\n    padding-top: 0.5em;\\r\\n    padding-bottom: 0.5em;\\r\\n    padding-left: 1em;\\r\\n}\\r\\n\\r\\n.card-text{\\r\\n    margin-top:1em;\\r\\n    font-family:Tahoma;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    margin-bottom:1em;\\r\\n    margin-top:1em;\\r\\n}\\r\\n\\r\\n.card-link{\\r\\n    color:black;\\r\\n}\\r\\n\\r\\n.asked-by{\\r\\n    font-size:small;\\r\\n    font-family:Verdana;\\r\\n    color:GrayText;\\r\\n\\r\\n}\\r\\n\\r\\n.card-title {\\r\\n    font-family: sans-serif;\\r\\n    font-weight: 700;\\r\\n    font-size: large;\\r\\n}\\r\\n\\r\\n.previewQuestion {\\r\\n    margin-bottom:1em;\\r\\n    font-size:smaller;\\r\\n    color:#555555;\\r\\n    display:block;\\r\\n    max-height:3em;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\"","module.exports = \"<p *ngIf=\\\"!questionView\\\"><em>Loading...</em></p>\\r\\n\\r\\n <!-- // This does not work in mobile and it breaks the app.\\r\\n    inViewport\\r\\n    (inViewportAction)=\\\"onEnterLeaveViewport($event, questionView.question)\\\"-->\\r\\n\\r\\n<div *ngIf=\\\"questionView\\\">\\r\\n    <div class=\\\"card\\\">        \\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h3 class=\\\"card-title\\\">\\r\\n                <a [routerLink]=\\\"['/question-detail', questionView.question.id]\\\"\\r\\n                   class=\\\"card-link\\\">\\r\\n                    {{questionView.question.title}}\\r\\n                </a>\\r\\n                <span class=\\\"badge badge-light\\\">\\r\\n                    ${{questionView.question.offeredPrice}}\\r\\n                </span>\\r\\n            </h3>\\r\\n\\r\\n            <h6 class=\\\"asked-by\\\">\\r\\n                Asked by {{questionView.question.user.name}}\\r\\n                {{questionView.question.originDate | readableDate}}\\r\\n            </h6>\\r\\n            <html-content [htmlString]=\\\"previewQuestionDetail\\\"\\r\\n                 class=\\\"card-text previewQuestion\\\">\\r\\n            </html-content>\\r\\n\\r\\n            <div *ngIf=\\\"!questionView.isFollowing\\\">\\r\\n                <button (click)=\\\"onFollow()\\\"\\r\\n                        class=\\\"btn btn-light\\\">\\r\\n                    <i class=\\\"fas fa-rss\\\"></i>\\r\\n                    Follow\\r\\n                </button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"questionView.isFollowing\\\">\\r\\n                <button (click)=\\\"onUnfollow()\\\"\\r\\n                        class=\\\"btn btn-light\\\">\\r\\n                    Following\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"!previewAnswerContent\\\">\\r\\n                <em>No answers yet</em>\\r\\n            </div>\\r\\n            <html-content *ngIf=\\\"previewAnswerContent\\\"\\r\\n                          [htmlString]=\\\"previewAnswerContent\\\">\\r\\n            </html-content>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Input } from '@angular/core';\r\n\r\nimport { UserSpecificQuestionPreview } from '../../services/questions.service'\r\nimport { QuestionFollowerService } from '../../services/questionfollower.service'\r\nimport { QuestionViewService } from '../../services/question-views.service';\r\nimport { Question } from '../../models/Question';\r\n\r\n@Component({\r\n    selector: 'question-card',\r\n    templateUrl: './questioncard.component.html',\r\n    styleUrls: ['./questioncard.component.css']\r\n})\r\nexport class QuestionCardComponent {\r\n    previewAnswerContent: string = \"\";\r\n    previewQuestionDetail: string = \"\";\r\n    private _questionView: UserSpecificQuestionPreview | undefined;\r\n\r\n    onEnterLeaveViewport(event: any, question: Question) {\r\n        const { entry , target, value } = event;\r\n\r\n        let intObsEntry = entry as IntersectionObserverEntry;\r\n\r\n        if (intObsEntry.intersectionRatio === 1) {\r\n            console.log(`${question.title} became visible`);\r\n            this.questionViewService.add(\r\n                this._questionView!.question.id).subscribe(\r\n                    () => {\r\n                    }\r\n                );\r\n        }\r\n        \r\n        //console.log('entry', entry);\r\n        //console.log('target', target);\r\n        //console.log('value', value);\r\n\r\n    }\r\n\r\n    onFollow() {\r\n        this.questionFollowerService.follow(\r\n            this._questionView!.question.id).subscribe(\r\n            () => {\r\n                this._questionView!.isFollowing = true;\r\n            }\r\n        );\r\n    }\r\n\r\n    onUnfollow() {\r\n        this.questionFollowerService.unfollow(\r\n            this._questionView!.question.id).subscribe(\r\n            () => {\r\n                this._questionView!.isFollowing = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    @Input()\r\n    set questionView(questionView: UserSpecificQuestionPreview | undefined) {\r\n\r\n        if(questionView){\r\n            this._questionView = questionView;\r\n            let questionDescription = questionView.question.description;\r\n            if (questionDescription.length > 80) {\r\n                //this.previewQuestionDetail = questionDescription.substring(0, 75) + \" ... \";\r\n            } else {\r\n                //this.previewQuestionDetail = questionDescription;\r\n            }\r\n\r\n            this.previewQuestionDetail = questionDescription;\r\n\r\n            if (questionView.previewAnswer) {\r\n                this.previewAnswerContent = questionView.previewAnswer.redactedHtmlContent.substring(0, 100) + \" ... \";\r\n            }\r\n        }\r\n    }\r\n\r\n    get questionView(): (UserSpecificQuestionPreview | undefined) {\r\n        return this._questionView;\r\n    }\r\n\r\n    constructor(\r\n        private questionViewService: QuestionViewService,\r\n        private questionFollowerService: QuestionFollowerService,\r\n    ) {\r\n    }\r\n\r\n}\r\n\r\n\r\n","module.exports = \".question-detail{\\r\\n    background-color:white;\\r\\n}\\r\\n\\r\\n.question-title {\\r\\n    margin-top: 1em;\\r\\n    font-family: sans-serif;\\r\\n    font-weight: 600;\\r\\n    font-size: x-large;\\r\\n}\\r\\n\\r\\n.question-description {\\r\\n    font-family: sans-serif;\\r\\n    font-weight: 500;\\r\\n    font-size: large;\\r\\n    margin-top:1em;\\r\\n    margin-bottom:1em;\\r\\n}\\r\\n\\r\\n.delete-question{\\r\\n    float:right;\\r\\n}\\r\\n\\r\\n.edit-answer-banner{\\r\\n    padding-left:1em;\\r\\n    font-size:larger;\\r\\n    padding-top:1em;\\r\\n}\\r\\n\\r\\n.edit-answer-button {\\r\\n    padding-left: 1em;\\r\\n    font-size: larger;\\r\\n    padding-bottom: 1em;\\r\\n}\"","module.exports = \"<div class=\\\"offset-md-1 col-md-9 question-detail\\\">\\r\\n    <p *ngIf=\\\"!question\\\"><em>Loading...</em></p>\\r\\n    <div *ngIf=\\\"question\\\">\\r\\n        <div *ngIf=\\\"!isQuestionEditorVisible\\\">\\r\\n            <div class=\\\"question-title\\\">\\r\\n                <div *ngIf=\\\"question.isDeleted\\\">\\r\\n                    <del>{{question.title}}</del>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!question.isDeleted\\\">\\r\\n                    {{question.title}}\\r\\n                </div>\\r\\n                <span class=\\\"badge badge-secondary badge-success\\\">\\r\\n                    ${{question.offeredPrice}}\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"my-4\\\">\\r\\n                <html-content [htmlString]=\\\"question.description\\\"\\r\\n                              class=\\\"question-description\\\">\\r\\n                </html-content>\\r\\n            </div>\\r\\n\\r\\n            <div>\\r\\n                <button *ngIf=\\\"isAsker\\\"\\r\\n                        class=\\\"btn btn-default btn-sm\\\"\\r\\n                        (click)=\\\"OnEditQuestionClick()\\\">\\r\\n                    Edit Question\\r\\n                </button>\\r\\n                <button *ngIf=\\\"!isAnswerWritten\\\"\\r\\n                        class=\\\"btn btn-default btn-sm ml-1\\\"\\r\\n                        (click)=\\\"OnAnswerClick()\\\">\\r\\n                    Answer\\r\\n                </button>\\r\\n                <button *ngIf=\\\"isAsker\\\"\\r\\n                        class=\\\"btn btn-danger delete-question btn-sm\\\"\\r\\n                        (click)=\\\"OnDeleteQuestionClick()\\\">\\r\\n                    <span *ngIf=\\\"question.isDeleted\\\">Undelete</span>\\r\\n                    <span *ngIf=\\\"!question.isDeleted\\\">Delete</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div *ngIf=\\\"isQuestionEditorVisible\\\">\\r\\n            <question-editor [question]=\\\"question\\\"\\r\\n                             (questionEditCancelled)=\\\"onQuestionEditCancelled()\\\"\\r\\n                             (questionEdited)=\\\"onQuestionEdited($event)\\\">\\r\\n            </question-editor>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"isAddAnswerVisible\\\">\\r\\n            <add-answer [questionId]=\\\"question.id\\\"\\r\\n                        (answerAdded)=\\\"onAnswerAdded($event)\\\">\\r\\n            </add-answer>\\r\\n        </div>\\r\\n        <hr />\\r\\n        \\r\\n        <div *ngIf=\\\"isAnswerWritten\\\">\\r\\n            <p class=\\\"edit-answer-banner\\\">\\r\\n                You have written an Answer\\r\\n            </p>\\r\\n            <p class=\\\"edit-answer-button\\\">\\r\\n                <button class=\\\"btn btn-secondary btn-light\\\"\\r\\n                        [routerLink]=\\\"['/answer-page', myAnswerId]\\\">\\r\\n                    \\r\\n                    Edit your answer\\r\\n                </button>\\r\\n            </p>\\r\\n            \\r\\n            <hr />\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"!answerViews\\\" class=\\\"row\\\">\\r\\n            Loading...\\r\\n        </div>\\r\\n        <div *ngIf=\\\"answerViews\\\">\\r\\n            <h4>\\r\\n                {{answerViews.length}} Answer\\r\\n            </h4>\\r\\n            <div *ngFor=\\\"let answerView of answerViews\\\">\\r\\n                <hr />\\r\\n                <answer-card [answerView]=\\\"answerView\\\"\\r\\n                             [loggedInUser]=\\\"loggedInUser\\\"\\r\\n                             (answerDeleted)=\\\"onAnswerDeleted($event)\\\">\\r\\n                </answer-card>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","﻿import { Component, Inject, Input, OnInit, OnDestroy }\r\n    from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { User } from '../../models/User';\r\nimport { Answer } from '../../models/Answer';\r\nimport { Question } from '../../models/Question';\r\n\r\nimport { AnswerService, UserSpecificAnswerView } from '../../services/answers.service'\r\nimport { QuestionService } from '../../services/questions.service'\r\nimport { IdentityService } from '../../services/identity.service'\r\n\r\n@Component({\r\n    selector: 'question-detail',\r\n    templateUrl: './questiondetail.component.html',\r\n    styleUrls: ['./questiondetail.component.css'],\r\n})\r\n\r\nexport class QuestionDetailComponent implements OnInit, OnDestroy {\r\n    public answerViews: UserSpecificAnswerView[] | undefined;\r\n    public question: Question | undefined;\r\n    public isQuestionEditorVisible: boolean = false;\r\n    private paramsSubscription: any;\r\n    public isAddAnswerVisible: boolean = false;\r\n    loggedInUser: User | undefined;\r\n    isAnswerWritten: boolean = false;\r\n    myAnswerId: number | undefined;;\r\n\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute,\r\n        private identityService: IdentityService,\r\n        private answerService: AnswerService,\r\n        private questionService: QuestionService) {\r\n\r\n        this.isAddAnswerVisible = false;\r\n        this.isQuestionEditorVisible = false;\r\n        this.isAnswerWritten = false;\r\n    }\r\n\r\n    get isAsker() {\r\n        return this.loggedInUser && this.question &&\r\n            this.question.user &&\r\n            this.question.user.id === this.loggedInUser.id;\r\n    }\r\n\r\n    OnAnswerClick() {\r\n        this.isAddAnswerVisible = true;\r\n    }\r\n\r\n    OnEditQuestionClick() {\r\n        this.isQuestionEditorVisible = true;\r\n    }\r\n\r\n    // TODO\r\n    OnDeleteQuestionClick() {\r\n        this.questionService.update(this.question!)\r\n            .subscribe(result => {\r\n            }, error => console.error(error));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.paramsSubscription.unsubscribe();\r\n    }\r\n\r\n    loadQuestion(questionId: number) {\r\n        this.questionService.getById(questionId)\r\n            .subscribe((question: Question) => {\r\n                this.question = question;\r\n            }, error => console.error(error));\r\n    }\r\n\r\n    loadAnswers(questionId: number) {\r\n        this.answerService.getForQuestion(questionId)\r\n            .subscribe(result => {\r\n                this.answerViews = result as UserSpecificAnswerView[];\r\n                this.findIfWrittenAnswer();\r\n            }, error => console.error(error));\r\n    }\r\n\r\n    loadLoggedInUser() {\r\n        this.identityService.getLoggedInUser()\r\n            .subscribe(result => {\r\n                if (result != null) {\r\n                    this.loggedInUser = result as User;\r\n                    this.findIfWrittenAnswer();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    findIfWrittenAnswer() {\r\n        if (!this.isAnswerWritten && this.answerViews && this.loggedInUser) {\r\n            this.answerViews.forEach(\r\n                (av) => {\r\n                    if (av.answer!.user!.id == this.loggedInUser!.id) {\r\n                        this.isAnswerWritten = true;\r\n                        this.myAnswerId = av.answer.id;\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadLoggedInUser();\r\n        this.paramsSubscription = \r\n            this.activatedRoute.params\r\n                .subscribe((params:any) => {\r\n                    let questionId = Number(params['id']);\r\n                    this.loadQuestion(questionId);\r\n                    this.loadAnswers(questionId);\r\n                }\r\n            );\r\n    }\r\n\r\n    onAnswerAdded(answer: Answer) {\r\n        this.loadAnswers(this.question!.id);\r\n        this.isAddAnswerVisible = false;\r\n    }\r\n\r\n    onAnswerDeleted(answer: Answer) {\r\n        this.loadAnswers(this.question!.id);\r\n    }\r\n\r\n    onQuestionEdited(question: Question) {\r\n        this.isQuestionEditorVisible = false;\r\n        this.loadQuestion(this.question!.id);\r\n    }\r\n\r\n    onQuestionEditCancelled() {\r\n        this.isQuestionEditorVisible = false;\r\n    }\r\n\r\n    //May be put the answer updater view inside answer card.\r\n\r\n}\r\n\r\n\r\n","module.exports = \".question-form{\\r\\n    margin-top:2em;\\r\\n    background-color:#fafafa;\\r\\n}\"","module.exports = \"<form [formGroup]=\\\"form\\\"\\r\\n      (ngSubmit)=\\\"onSubmit(form.value)\\\">\\r\\n    <div>\\r\\n        <h4>Title</h4>\\r\\n        <textarea rows=\\\"2\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  name=\\\"title\\\" id=\\\"title\\\"\\r\\n                  formControlName=\\\"title\\\">\\r\\n        </textarea>\\r\\n\\r\\n        <h4>Details</h4>\\r\\n        <content-editor [content]=\\\"question.description\\\"\\r\\n                        (contentChanged)=\\\"onDescriptionChanged($event)\\\">\\r\\n        </content-editor>\\r\\n\\r\\n        <h4>$ Reward:</h4>\\r\\n        <input type=\\\"number\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               name=\\\"OfferedPrice\\\" id=\\\"OfferedPrice\\\"\\r\\n               formControlName=\\\"offeredPrice\\\" />\\r\\n\\r\\n    </div>\\r\\n    <br />\\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n            type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\r\\n        Save\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"onCancel()\\\">\\r\\n        Cancel\\r\\n    </button>\\r\\n</form>\\r\\n\\r\\n\\r\\n\"","﻿import { Component, Inject, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Question } from '../../models/Question';\r\nimport { QuestionService } from '../../services/questions.service'\r\n\r\n@Component({\r\n    selector: 'question-editor',\r\n    templateUrl: './questioneditor.component.html',\r\n    styleUrls: ['./questioneditor.component.css'],\r\n})\r\nexport class QuestionEditorComponent implements OnInit {\r\n    form: FormGroup | undefined;\r\n    private _question: Question | undefined;\r\n    updatedDescription: string = \"\";\r\n\r\n    @Output() questionEdited = new EventEmitter();\r\n    @Output() questionEditCancelled = new EventEmitter();\r\n\r\n    @Input()\r\n    set question(question: Question | undefined) {\r\n        if (question) {\r\n            this._question = question;\r\n            this.updatedDescription = question.description;\r\n\r\n            this.form = this.formBuilder.group({\r\n                title: this.formBuilder.control(question.title, Validators.compose([\r\n                    Validators.required,\r\n                ])),\r\n                offeredPrice: this.formBuilder.control(question.offeredPrice,\r\n                    Validators.compose([\r\n                        Validators.pattern('[0-9]+'),\r\n                    ]))\r\n            });\r\n        }\r\n    }\r\n\r\n    get question(): (Question | undefined) {\r\n        return this._question;\r\n    }\r\n\r\n    onDescriptionChanged(newDesc: string) {\r\n        this.updatedDescription = newDesc;\r\n    }\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private questionService: QuestionService,\r\n        private router: Router) { }\r\n\r\n    ngOnInit() {\r\n\r\n       \r\n    }\r\n\r\n    onSubmit(question: Question) {\r\n        question.id = this.question!.id;\r\n        question.description = this.updatedDescription;\r\n        this.questionService.update(question)\r\n            .subscribe(() => {\r\n                this.questionEdited.emit(question);\r\n            });\r\n    }\r\n\r\n    onCancel() {\r\n        this.questionEditCancelled.emit();\r\n    }\r\n}","module.exports = \".login-control{\\r\\n    margin:0.5em;\\r\\n    padding:0.25em;\\r\\n}\\r\\n\\r\\n.login-form{\\r\\n    padding-top:0.5em;\\r\\n    background-color:ghostwhite;\\r\\n}\\r\\n\\r\\n.engraved-text {\\r\\n    font-size:20px;\\r\\n    font-family: Futura;\\r\\n    background-color: #666666;\\r\\n    -webkit-background-clip: text;\\r\\n    background-clip: text;\\r\\n    color: transparent;\\r\\n    text-shadow: rgba(245,245,245,0.5) 3px 5px 1px;\\r\\n}\"","module.exports = \"<div class=\\\"text-center\\\">\\r\\n    Sign Up Form\\r\\n    <form [formGroup]=\\\"form\\\"\\r\\n          (ngSubmit)=\\\"onSubmit(form.value)\\\">\\r\\n        <div>\\r\\n            <input type=\\\"text\\\"\\r\\n                   autofocus\\r\\n                   autocomplete=\\\"on\\\"\\r\\n                   class=\\\"login-control\\\"\\r\\n                   placeholder=\\\"Name\\\"\\r\\n                   name=\\\"name\\\" id=\\\"name\\\"\\r\\n                   formControlName=\\\"Name\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n            <input type=\\\"text\\\"\\r\\n                   autofocus\\r\\n                   autocomplete=\\\"on\\\"\\r\\n                   class=\\\"login-control\\\"\\r\\n                   placeholder=\\\"Email\\\"\\r\\n                   name=\\\"email\\\" id=\\\"email\\\"\\r\\n                   formControlName=\\\"Email\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n            <input type=\\\"password\\\"\\r\\n                   autocomplete=\\\"on\\\"\\r\\n                   class=\\\"login-control\\\"\\r\\n                   placeholder=\\\"Password\\\"\\r\\n                   name=\\\"password\\\" id=\\\"password\\\"\\r\\n                   formControlName=\\\"Password\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n            <input type=\\\"password\\\"\\r\\n                   autocomplete=\\\"off\\\"\\r\\n                   class=\\\"login-control\\\"\\r\\n                   placeholder=\\\"Retype Password\\\"\\r\\n                   name=\\\"confirmPassword\\\" id=\\\"confirmPassword\\\"\\r\\n                   formControlName=\\\"ConfirmPassword\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n            <input type=\\\"text\\\"\\r\\n                   *ngIf=\\\"isEmailSent\\\"\\r\\n                   autocomplete=\\\"off\\\"\\r\\n                   class=\\\"login-control\\\"\\r\\n                   placeholder=\\\"Email Confirmation Code\\\"\\r\\n                   name=\\\"confirmEmailCode\\\" id=\\\"confirmEmailCode\\\"\\r\\n                   formControlName=\\\"ConfirmEmailCode\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n            <button type=\\\"submit\\\"\\r\\n                    class=\\\"login-control btn btn-light\\\">\\r\\n                Submit\\r\\n            </button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { IdentityService, RegistrationForm } from '../../services/identity.service';\r\n\r\n@Component({\r\n    selector: 'registration-form',\r\n    templateUrl: './registrationform.component.html',\r\n    styleUrls: ['./registrationform.component.css']\r\n})\r\nexport class RegistrationFormComponent {\r\n\r\n    isEmailSent: boolean = false;\r\n    @Output() registrationCompleted = new EventEmitter();\r\n    form: FormGroup | undefined;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private identityService: IdentityService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            Name: this.formBuilder.control('', Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n            Email: this.formBuilder.control('', Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n            Password: this.formBuilder.control('', Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n            ConfirmPassword: this.formBuilder.control('', Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n        });\r\n    }\r\n\r\n    confirmRegistration(regForm: RegistrationForm) {\r\n        this.identityService.confirmRegistration(regForm).subscribe(result => {\r\n            if (result != null && result.length > 0) {\r\n                this.registrationCompleted.emit();\r\n            }\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    submitRegistration(regForm: RegistrationForm) {\r\n        this.identityService.register(regForm).subscribe(result => {\r\n            if (result != null && result.length > 0) {\r\n                this.isEmailSent = true;\r\n            }\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    onSubmit(regForm: RegistrationForm) {\r\n        if (this.isEmailSent) {\r\n            this.confirmRegistration(regForm);\r\n        }\r\n        else {\r\n            this.submitRegistration(regForm);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \".login-control{\\r\\n    margin:0.5em;\\r\\n    padding:0.25em;\\r\\n}\\r\\n\\r\\n.login-form{\\r\\n    padding-top:0.5em;\\r\\n    background-color:ghostwhite;\\r\\n}\\r\\n\\r\\n.engraved-text {\\r\\n    font-size:20px;\\r\\n    font-family: Futura;\\r\\n    background-color: #666666;\\r\\n    -webkit-background-clip: text;\\r\\n    background-clip: text;\\r\\n    color: transparent;\\r\\n    text-shadow: rgba(245,245,245,0.5) 3px 5px 1px;\\r\\n}\"","module.exports = \"<div class=\\\"text-center\\\">\\r\\n    <form [formGroup]=\\\"form\\\"\\r\\n          (ngSubmit)=\\\"onSubmit(form.value)\\\">\\r\\n        <div>\\r\\n            <input type=\\\"text\\\"\\r\\n                   autofocus\\r\\n                   autocomplete=\\\"on\\\"\\r\\n                   class=\\\"login-control\\\"\\r\\n                   placeholder=\\\"Name\\\"\\r\\n                   name=\\\"name\\\" id=\\\"name\\\"\\r\\n                   formControlName=\\\"Name\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n            <input type=\\\"text\\\"\\r\\n                   autofocus\\r\\n                   autocomplete=\\\"on\\\"\\r\\n                   class=\\\"login-control\\\"\\r\\n                   placeholder=\\\"Email\\\"\\r\\n                   name=\\\"email\\\" id=\\\"email\\\"\\r\\n                   formControlName=\\\"Email\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div>\\r\\n            <button type=\\\"submit\\\"\\r\\n                    class=\\\"login-control btn btn-light\\\">\\r\\n                Submit\\r\\n            </button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, EventEmitter, Output, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { ReqInvite } from '../../models/RequestInvite';\r\nimport { RequestInviteService } from '../../services/request-invite.service';\r\n\r\n@Component({\r\n    selector: 'request-invite',\r\n    templateUrl: './request-invite.component.html',\r\n    styleUrls: ['./request-invite.component.css']\r\n})\r\nexport class RequestInviteComponent implements OnInit {\r\n    form: FormGroup | undefined;\r\n    @Output() inviteReqSubmitted = new EventEmitter();\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private reqInviteService: RequestInviteService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            Name: this.formBuilder.control('', Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n            Email: this.formBuilder.control('', Validators.compose([\r\n                Validators.required,\r\n            ])),\r\n\r\n        });\r\n    }\r\n\r\n\r\n    onSubmit(req: ReqInvite) {\r\n        this.reqInviteService.requestInvitation(req)\r\n            .subscribe(\r\n            (result) => {\r\n                this.inviteReqSubmitted.emit();\r\n            });\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \".profile-picture{\\r\\n  max-height:200px;\\r\\n  max-width:200px;\\r\\n}\\r\\n\\r\\n.latest-credential{\\r\\n    font-size:smaller;\\r\\n}\\r\\n\\r\\n.upper-section {\\r\\n    padding-top: 1em;\\r\\n}\\r\\n\\r\\n.upper-left-section {\\r\\n    border-bottom: 2px solid #e8e8e8;\\r\\n    padding-bottom: 1em;\\r\\n}\\r\\n\\r\\n.upper-right-section {\\r\\n    border-bottom: 1px solid #e8e8e8;\\r\\n    padding-bottom: 1em;\\r\\n}\\r\\n\\r\\n.profile-name {\\r\\n    font-family:Georgia;\\r\\n    font-size: x-large;\\r\\n    font-weight: 700;\\r\\n}\\r\\n\\r\\n.edit-link{\\r\\n    padding-left:0.5em;\\r\\n    color:lightgray;\\r\\n    visibility:hidden;\\r\\n}\\r\\n\\r\\n.profile-name:hover + .edit-link{\\r\\n    visibility:visible;\\r\\n}\\r\\n\\r\\n.edit-link:hover {\\r\\n    visibility: visible;\\r\\n}\\r\\n\\r\\n.profile-introduction:hover + .edit-link {\\r\\n    visibility: visible;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"offset-md-1 col-md-9\\\">\\r\\n    <div class=\\\"row upper-section\\\">\\r\\n        <div class=\\\"col-md-9 upper-left-section\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div *ngIf=\\\"currentProfile\\\" class=\\\"col-md-4\\\">\\r\\n                    <div class=\\\"row mb-2\\\">\\r\\n                        <div>\\r\\n                            <img class=\\\"profile-picture\\\" src={{currentProfile.pictureUrl}} alt={{currentProfile.name}}>\\r\\n                        </div>    \\r\\n                    </div>                    \\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"offset-md-6\\\">\\r\\n                            <button type=\\\"button\\\"\\r\\n                                    (click)=\\\"onShowChangePicture(changePictureTemplate)\\\"\\r\\n                                    class=\\\"btn btn-light\\\">\\r\\n                                Change\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    <span class=\\\"profile-name\\\"\\r\\n                          *ngIf=\\\"!isNameEditorVisible && currentProfile\\\">\\r\\n                        {{currentProfile.name}}\\r\\n                    </span>\\r\\n                    <button (click)=\\\"showNameEditor()\\\"\\r\\n                            *ngIf=\\\"!isNameEditorVisible\\\"\\r\\n                            class=\\\"edit-link btn btn-light\\\">\\r\\n                        Edit\\r\\n                    </button>\\r\\n                    <inline-text-editor *ngIf=\\\"isNameEditorVisible && currentProfile\\\"\\r\\n                                        [content]=\\\"currentProfile.name\\\"\\r\\n                                        (contentChanged)=\\\"onNameChange($event)\\\">\\r\\n                    </inline-text-editor>\\r\\n                    <button *ngIf=\\\"isNameEditorVisible\\\"\\r\\n                            (click)=\\\"updateName()\\\"\\r\\n                            class=\\\"btn btn-sm btn-primary\\\">\\r\\n                        Save\\r\\n                    </button>\\r\\n                    <button *ngIf=\\\"isNameEditorVisible\\\"\\r\\n                            (click)=\\\"onCancelNameChange()\\\"\\r\\n                            class=\\\"btn btn-sm btn-secondary ml-1\\\">\\r\\n                        Cancel\\r\\n                    </button>\\r\\n\\r\\n                    <div *ngIf=\\\"!isIntroductionEditorVisible && currentProfile\\\">\\r\\n                        <html-content class=\\\"profile-introduction\\\"\\r\\n                                      [htmlString]=\\\"currentProfile.introduction\\\"\\r\\n                                      *ngIf=\\\"currentProfile.introduction\\\">\\r\\n                        </html-content>\\r\\n                        <html-content class=\\\"profile-introduction\\\"\\r\\n                                      htmlString=\\\"Introduce yourself here ...\\\"\\r\\n                                      *ngIf=\\\"!currentProfile.introduction\\\">\\r\\n                        </html-content>\\r\\n                        <button (click)=\\\"showIntroductionEditor()\\\"\\r\\n                                class=\\\"edit-link btn btn-light\\\">\\r\\n                            Edit\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <content-editor *ngIf=\\\"isIntroductionEditorVisible && currentProfile\\\"\\r\\n                                    [content]=\\\"currentProfile.introduction\\\"\\r\\n                                    (contentChanged)=\\\"onIntroductionChanged($event)\\\">\\r\\n                    </content-editor>\\r\\n\\r\\n                    <button *ngIf=\\\"isIntroductionEditorVisible\\\"\\r\\n                            (click)=\\\"updateIntroduction()\\\"\\r\\n                            class=\\\"btn btn-sm btn-primary\\\">\\r\\n                        Save\\r\\n                    </button>\\r\\n                    <button *ngIf=\\\"isIntroductionEditorVisible\\\"\\r\\n                            (click)=\\\"onCancelIntroductionChange()\\\"\\r\\n                            class=\\\"btn btn-sm btn-secondary\\\">\\r\\n                        Cancel\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3 upper-right-section\\\">\\r\\n            Credentials\\r\\n\\r\\n            <button (click)=\\\"onOpenCredentialsEditor()\\\"\\r\\n                    class=\\\"btn btn-light btn-sm\\\">\\r\\n                Edit\\r\\n            </button>\\r\\n            <div *ngIf=\\\"latestEmployment\\\" class=\\\"latest-credential mt-3\\\">\\r\\n                <i class=\\\"fas fa-briefcase\\\"></i>\\r\\n                {{latestEmployment.position}}, {{latestEmployment.company}}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"latestEducation\\\" class=\\\"latest-credential mt-3\\\">\\r\\n                <i class=\\\"fas fa-graduation-cap\\\"></i>\\r\\n                {{latestEducation.degreeType}}, {{latestEducation.concentration}}, {{latestEducation.school}}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <purchased-answers>\\r\\n        </purchased-answers>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Modal Template: Change Picture-->\\r\\n<ng-template #changePictureTemplate>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <span class=\\\"modal-title pull-left\\\">Choose Picture</span>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"changePictureModal.hide()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-2 col-form-label\\\">Url</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   [(ngModel)]=\\\"imageUrl\\\"\\r\\n                   class=\\\"form-control col-sm-6\\\"\\r\\n                   placeholder=\\\"image url\\\">\\r\\n\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                <input #fileInput\\r\\n                       type=\\\"file\\\"\\r\\n                       hidden\\r\\n                       (change)=\\\"onPictureFileSelected($event)\\\">\\r\\n                <button type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-secondary\\\"\\r\\n                        (click)=\\\"fileInput.click()\\\">\\r\\n                    <i class=\\\"far fa-folder-open\\\"></i> Browse\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <button type=\\\"button\\\"\\r\\n                (click)=\\\"onChangePicture()\\\"\\r\\n                class=\\\"btn btn-primary\\\">\\r\\n            Apply Change\\r\\n        </button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, TemplateRef, Inject } from '@angular/core';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ApplicationUserService, Credentials, Employment, Education } from '../../services/application-user.service';\r\nimport { CredentialsReadonlyComponent } from '../../components/credentials-readonly/credentials-readonly.component'\r\nimport { CredentialsEditorComponent } from '../../components/credentials-editor/credentials-editor.component'\r\n\r\nimport { User } from '../../models/User';\r\nimport { ImageStoreService } from '../../services/image-store.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'user-profile',\r\n    templateUrl: './user-profile.component.html',\r\n    styleUrls: ['./user-profile.component.css']\r\n})\r\n\r\nexport class UserProfileComponent implements OnInit {\r\n\r\n    bsModalRef: BsModalRef | undefined;\r\n    isNameEditorVisible = false;\r\n    isIntroductionEditorVisible = false;\r\n    profileUserId: number | undefined;\r\n    private _loggedInUser: User | undefined;\r\n    private _currentProfile: User | undefined;\r\n    private _updatedProfile: User | undefined;\r\n    private _credetials: Credentials | undefined;\r\n    changePictureModal: BsModalRef | undefined;\r\n    baseUrl: string | undefined;\r\n\r\n    private paramsSubscription: any;\r\n\r\n    showNameEditor() {\r\n        this.isNameEditorVisible = true;\r\n    }\r\n\r\n    showIntroductionEditor() {\r\n        this.isIntroductionEditorVisible = true;\r\n    }\r\n\r\n    get credentials() {\r\n        return this._credetials;\r\n    }\r\n\r\n    get currentProfile() {\r\n        return this._currentProfile;\r\n    }\r\n\r\n    get loggedInUser() {\r\n        return this._loggedInUser;\r\n    }\r\n\r\n    onShowChangePicture(template: TemplateRef<any>) {\r\n        const initialState = {\r\n        };\r\n        this.changePictureModal = this.modalService.show(\r\n            template, { initialState }\r\n        );\r\n    }\r\n\r\n    selectedFile: File | undefined;\r\n    imageUrl: string | undefined;\r\n\r\n    onPictureFileSelected(event: any) {\r\n        this.selectedFile = <File>event.target.files[0];\r\n        console.log(this.selectedFile);\r\n        this.imageUrl = this.selectedFile!.name;\r\n    }\r\n\r\n  upload(): Observable<any> {\r\n        const formData = new FormData();\r\n        formData.append('image', this.selectedFile!, this.selectedFile!.name);\r\n        return this.imageStoreService.upload(formData);\r\n    }\r\n\r\n  onChangePicture() {\r\n    \r\n        if (this.imageUrl) {\r\n            let imageUrlLowerCase = this.imageUrl.toLowerCase();\r\n            if (imageUrlLowerCase.startsWith(\"http://\") || imageUrlLowerCase.startsWith(\"https://\")) {\r\n            } else {\r\n                this.upload().subscribe(\r\n                    (imagePath) => {\r\n                      this.imageUrl = this.baseUrl!.concat(\"/api/imagestore/\").concat(imagePath);\r\n                      this.updatePicture();\r\n                      this.changePictureModal!.hide();\r\n                });\r\n          }\r\n        }\r\n    }\r\n\r\n    onNameChange(newName: string) {\r\n        this._updatedProfile!.name = newName;\r\n    }\r\n\r\n    onIntroductionChanged(newIntro: string) {\r\n        this._updatedProfile!.introduction = newIntro;\r\n    }\r\n\r\n    onCancelNameChange() {\r\n        this.isNameEditorVisible = false;\r\n        this._updatedProfile!.name = this._currentProfile!.name;\r\n    }\r\n\r\n    onCancelIntroductionChange() {\r\n        this.isIntroductionEditorVisible = false;\r\n        this._updatedProfile!.introduction = this._currentProfile!.introduction;\r\n    }\r\n\r\n  updatePicture() {\r\n    this._updatedProfile!.pictureUrl = this.imageUrl;\r\n    this.applicationUserService\r\n      .updatePictureUrl(this._updatedProfile!)\r\n        .subscribe(() => {\r\n          this._currentProfile!.pictureUrl = this._updatedProfile!.pictureUrl;\r\n        });\r\n    }\r\n\r\n    updateName() {\r\n        this.applicationUserService\r\n            .updateUser(this._updatedProfile!)\r\n            .subscribe(() => {\r\n                this._currentProfile!.name = this._updatedProfile!.name;\r\n                this.isNameEditorVisible = false;\r\n            });\r\n    }\r\n\r\n    updateIntroduction() {\r\n        this.applicationUserService\r\n            .updateUser(this._updatedProfile!)\r\n            .subscribe(() => {\r\n                this._currentProfile!.introduction = this._updatedProfile!.introduction;\r\n                this.isIntroductionEditorVisible = false;\r\n            });\r\n    }\r\n\r\n    onOpenCredentialsEditor() {\r\n        const initialState = {\r\n            name: this.currentProfile!.name,\r\n            userId: this.profileUserId\r\n        };\r\n        this.bsModalRef = this.modalService.show(CredentialsEditorComponent, { initialState });\r\n    }\r\n\r\n    openCredentials() {\r\n        const initialState = {\r\n            name: this.currentProfile!.name,\r\n            userId: this._loggedInUser!.id,\r\n        };\r\n        this.bsModalRef = this.modalService.show(CredentialsReadonlyComponent, { initialState });\r\n    }\r\n\r\n    latestEmployment: Employment;\r\n    latestEducation: Education;\r\n\r\n    ngOnInit() {\r\n        this.paramsSubscription =\r\n            this.activatedRoute.params\r\n            .subscribe((params: any) => {\r\n                this.profileUserId = params['id'];\r\n\r\n                this.applicationUserService.getProfile(this.profileUserId).subscribe(\r\n                    response => {\r\n                        this._currentProfile = response as User;\r\n                        this._updatedProfile = { ...this._currentProfile };                       \r\n                    }\r\n                );\r\n                this.applicationUserService.getCredentials(this.profileUserId!).subscribe(\r\n                    response => {\r\n                        this._credetials = response as Credentials;\r\n                        if (this._credetials.employments.length > 0) {\r\n                            this.latestEmployment = this._credetials.employments[0];\r\n                        }\r\n                        if (this._credetials.educations.length > 0) {\r\n                            this.latestEducation = this._credetials.educations[0];\r\n                        }\r\n                    }\r\n                );\r\n                \r\n            });\r\n    }\r\n\r\n\r\n    constructor(\r\n        @Inject('BASE_URL') baseUrl: string,\r\n        private modalService: BsModalService,\r\n        private activatedRoute: ActivatedRoute,\r\n        private applicationUserService: ApplicationUserService,\r\n        private imageStoreService: ImageStoreService,\r\n    ) {\r\n      this.baseUrl = baseUrl;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p *ngIf=\\\"!questions\\\"><em>Loading...</em></p>\\r\\n\\r\\n<div *ngIf=\\\"questions\\\">\\r\\n    <div *ngFor=\\\"let question of questions\\\">\\r\\n        <div>\\r\\n            <a [routerLink]=\\\"['/question-detail', question.id]\\\">\\r\\n                {{question.title}}\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component, Input } from '@angular/core';\r\n\r\nimport { User } from '../../models/User';\r\nimport { Question } from '../../models/Question';\r\nimport { ApplicationUserService } from '../../services/application-user.service'\r\nimport { QuestionService } from '../../services/questions.service';\r\n\r\n@Component({\r\n    selector: 'user-questions',\r\n    templateUrl: './user-questions.component.html',\r\n    styleUrls: ['./user-questions.component.css']\r\n})\r\n\r\nexport class UserQuestionsComponent {\r\n\r\n    private _user: User | undefined;\r\n    private _questions: Question[] | undefined;\r\n\r\n    @Input()\r\n    set user(u: User | undefined) {\r\n        this._user = u;\r\n    }\r\n\r\n    get user(): (User | undefined) {\r\n        return this._user;\r\n    }\r\n\r\n    get questions() {\r\n        return this._questions;\r\n    }\r\n\r\n    constructor(\r\n        private questionService: QuestionService\r\n    ) {\r\n        this.questionService.getAllAskedByMe().subscribe(\r\n            response => {\r\n                this._questions = response as Question[];\r\n            }\r\n        );\r\n    }\r\n}\r\n","﻿import { Directive, Input, EventEmitter, ElementRef, Renderer, Inject }\r\n    from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[focus]'\r\n})\r\nexport class FocusDirective {\r\n    @Input('focus') focusEvent: EventEmitter<boolean> = new EventEmitter();\r\n\r\n    constructor(\r\n        @Inject(ElementRef) private element: ElementRef,\r\n        private renderer: Renderer) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.focusEvent.subscribe(\r\n            () => {\r\n                this.renderer.invokeElementMethod(\r\n                    this.element.nativeElement, 'focus', []);\r\n        });\r\n    }\r\n\r\n\r\n}","import { AfterViewInit, Directive, ElementRef, EventEmitter, Inject, Input, OnDestroy, Output, PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { Subscription } from 'rxjs-compat/Subscription';\r\n\r\nimport { InViewportConfig, ViewportWatcherService } from './viewport-watcher.service';\r\n\r\n@Directive({\r\n    selector: '[in-viewport], [inViewport]'\r\n})\r\nexport class ViewPortWatcherDirective implements AfterViewInit, OnDestroy {\r\n    private config: InViewportConfig;\r\n    private subscription: Subscription = new Subscription();\r\n\r\n    @Output('inViewportAction') public action$: EventEmitter<any>;\r\n\r\n    constructor(\r\n        @Inject(PLATFORM_ID) private platformId: Object,\r\n        private elementRef: ElementRef,\r\n        private inViewportService: ViewportWatcherService\r\n    ) {\r\n        this.config = new InViewportConfig();\r\n        this.action$ = new EventEmitter();\r\n    }\r\n\r\n    @Input('inViewportOptions')\r\n    set updateConfig(value: any) {\r\n        if (value && Object.prototype.toString.call(value) === '[object Object]') {\r\n            if (value.rootElement instanceof Element) {\r\n                this.config.rootElement = value.rootElement;\r\n            }\r\n            if ('partial' in value) {\r\n                this.config.partial = value.partial;\r\n            }\r\n            if ('direction' in value) {\r\n                this.config.direction = value.direction;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.subscription.add(\r\n                this.inViewportService.trigger$.subscribe((entry: IntersectionObserverEntry) => this.check(entry))\r\n            );\r\n            this.inViewportService.addTarget(this.elementRef.nativeElement, this.config.rootElement);\r\n        } else {\r\n            this.check(undefined, true);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.inViewportService.removeTarget(this.elementRef.nativeElement, this.config.rootElement);\r\n        }\r\n    }\r\n\r\n    check(entry?: IntersectionObserverEntry, force?: boolean) {\r\n        if (force || (entry && entry.target === this.elementRef.nativeElement)) {\r\n            const value = force || (this.config.partial ? entry!.intersectionRatio > 0 : entry!.intersectionRatio === 1);\r\n            this.action$.emit({\r\n                entry: entry,\r\n                target: this.elementRef.nativeElement,\r\n                value\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nexport interface InViewportServiceRegistryObject {\r\n    targets: Element[];\r\n    rootElement: Element;\r\n    observer: IntersectionObserver;\r\n}\r\n\r\n@Injectable()\r\nexport class ViewportWatcherService {\r\n    private registry: InViewportServiceRegistryObject[] = [];\r\n    public readonly trigger$: Subject<IntersectionObserverEntry> = new Subject<IntersectionObserverEntry>();\r\n\r\n    constructor(private ngZone: NgZone) { }\r\n\r\n    public addTarget(target: Element, rootElement?: Element): void {\r\n        this.ngZone.runOutsideAngular(() => this.register(target, rootElement));\r\n    }\r\n\r\n    public removeTarget(target: Element, rootElement?: Element): void {\r\n        this.ngZone.runOutsideAngular(() => this.unregister(target, rootElement));\r\n    }\r\n\r\n    private getRootElement(element: any) {\r\n        return element && element.nodeType === 1 ? element : null;\r\n    }\r\n\r\n    private findRegistryEntry(rootElement?: Element) {\r\n        return this.registry.find((item) => item.rootElement === this.getRootElement(rootElement));\r\n    }\r\n\r\n    private onChanges(entries: IntersectionObserverEntry[]): void {\r\n        if (Array.isArray(entries) && entries.length) {\r\n            entries.forEach((entry) => this.trigger$.next(entry));\r\n        }\r\n    }\r\n\r\n    private register(target: Element, rootElement?: Element): void {\r\n        let registryEntry = this.findRegistryEntry(rootElement);\r\n        if (!registryEntry) {\r\n            const registryEntryObserverOptions: any = {\r\n                root: this.getRootElement(rootElement),\r\n                threshold: 1.0\r\n            };\r\n            registryEntry = {\r\n                targets: [target],\r\n                rootElement: this.getRootElement(rootElement),\r\n                observer: new IntersectionObserver(\r\n                    (entries: IntersectionObserverEntry[]) => this.ngZone.run(() => this.onChanges(entries)),\r\n                    registryEntryObserverOptions\r\n                )\r\n            };\r\n            registryEntry.observer.observe(target);\r\n            this.registry.push(registryEntry);\r\n        } else if (registryEntry.targets.indexOf(target) < 0) {\r\n            registryEntry.targets.push(target);\r\n            registryEntry.observer.observe(target);\r\n        }\r\n    }\r\n\r\n    private unregister(target: Element, rootElement?: Element): void {\r\n        const registryEntry = this.findRegistryEntry(rootElement);\r\n        if (registryEntry) {\r\n            const registryEntryIdx = this.registry.indexOf(registryEntry);\r\n            const targetIdx = registryEntry.targets.indexOf(target);\r\n            if (targetIdx >= 0) {\r\n                registryEntry.observer.unobserve(target);\r\n                registryEntry.targets.splice(targetIdx, 1);\r\n            }\r\n            if (registryEntry.targets.length === 0) {\r\n                registryEntry.observer.disconnect();\r\n                this.registry.splice(registryEntryIdx, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport enum InViewportConfigDirection {\r\n    Both,\r\n    Vertical,\r\n    Horizontal\r\n}\r\n\r\nexport interface InViewportConfigOptions {\r\n    rootElement?: any;\r\n    partial?: boolean;\r\n    direction?: InViewportConfigDirection;\r\n}\r\n\r\nclass alpha {\r\n  abc: string; \r\n}\r\n\r\nexport class InViewportConfig {\r\n    protected _rootElement!: Element;\r\n    protected _partial!: boolean;\r\n    protected _direction!: InViewportConfigDirection;\r\n\r\n    constructor(options?: InViewportConfigOptions) {\r\n        this.rootElement = options && options.rootElement instanceof Element ? options.rootElement : void 0;\r\n\r\n        this.partial = options && 'partial' in options ? options.partial : true;\r\n\r\n        this.direction = options && 'direction' in options ? options.direction : InViewportConfigDirection.Both;\r\n    }\r\n\r\n    get rootElement(): Element | undefined {\r\n        return this._rootElement;\r\n    }\r\n\r\n    set rootElement(value: Element | undefined) {\r\n        if (value) {\r\n            this._rootElement = value;\r\n        }\r\n    }\r\n\r\n    get partial(): boolean | undefined {\r\n        return this._partial;\r\n    }\r\n\r\n    set partial(value: boolean | undefined) {\r\n        this._partial = !!value;\r\n    }\r\n\r\n    get direction(): InViewportConfigDirection | undefined{\r\n        return this._direction;\r\n    }\r\n\r\n    set direction(value: InViewportConfigDirection | undefined) {\r\n        if (value) {\r\n            this._direction = value;\r\n        }\r\n    }\r\n}\r\n","﻿import { User } from './User';\r\n\r\n// ProtectedAnswerContent is defined in this file because\r\n// all access to this class is through Answer class\r\n\r\nexport class ProtectedAnswerContent {\r\n    id: number | undefined;\r\n    htmlContent: string = \"\";\r\n}\r\n\r\nexport class Answer {\r\n    id: number | undefined;\r\n    questionId: number | undefined;\r\n    originDate: Date | undefined;\r\n    redactedHtmlContent: string = \"\";// To be used in general\r\n    protectedAnswerContent: ProtectedAnswerContent | undefined;\r\n    user: User | undefined;\r\n    price: number = 0;\r\n    isAnonymous: boolean = false;\r\n}","﻿export class AnswerDraft {\r\n    id: number | undefined;\r\n    questionId: number | undefined;\r\n    originDate: Date | undefined;\r\n    htmlContent: string = \"\";\r\n    price: number = 0;\r\n    isAnonymous: boolean = false;\r\n}","﻿export class AnswerPayment {\r\n    answerId: number | undefined;\r\n    paymentTypeId: number | undefined;\r\n    amount: number | undefined;\r\n    token: string | undefined\r\n}\r\n\r\nexport interface AnswerPaymentResult {\r\n    isSuccessful: boolean;\r\n    errorMessage: string;\r\n}","﻿export class AnswerRating {\r\n    id: number | undefined;\r\n    answerId: number | undefined;\r\n    originDate: Date | undefined;\r\n    lastUpdated: Date | undefined;\r\n    rating!: number | undefined;\r\n}","﻿export class QuestionTopic {\r\n    questionId: number | undefined;\r\n    topicId: number | undefined;\r\n}","﻿export class User {\r\n    id!: number;\r\n    name!: string;\r\n    uniqueName!: string;\r\n    introduction!: string;\r\n    pictureUrl!: string;\r\n}","﻿import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'readableDate' })\r\nexport class ReadableDatePipe implements PipeTransform {\r\n    transform(utcDate: Date): string {\r\n\r\n        let utcEvent = new Date(utcDate);\r\n        let utcNow = new Date();\r\n\r\n        var msec = utcNow.getTime() - utcEvent.getTime();\r\n        var hh = Math.floor(msec / 1000 / 60 / 60);\r\n        msec -= hh * 1000 * 60 * 60;\r\n        var mm = Math.floor(msec / 1000 / 60);\r\n        msec -= mm * 1000 * 60;\r\n        var ss = Math.floor(msec / 1000);\r\n        msec -= ss * 1000;\r\n\r\n        if (hh < 24) {\r\n            if (hh < 1) {\r\n                if (mm < 1) {\r\n                    if (ss < 5) {\r\n                        return \"just now\";\r\n                    }\r\n                    return ss + \" seconds ago\";\r\n                } else if (mm < 2) {\r\n                    return \"about a minute ago\"\r\n                } else {\r\n                    return \"about \" + mm + \" minutes ago\";\r\n                }\r\n            } else if (hh < 2) {\r\n                return \"about an hour ago\";\r\n            } else {\r\n                \"about \" + hh + \" hours ago\";\r\n            }\r\n            return \"about \" + hh + \" hours ago\";\r\n        } else if (hh < 48) {\r\n            return \"about a day ago\";\r\n        } else {\r\n            var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n            return \"on \" + utcEvent.toLocaleDateString(\"en-US\", options);\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable} from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { AnswerDraft } from '../models/AnswerDraft';\r\nimport { of } from 'rxjs/observable/of';\r\n\r\n@Injectable()\r\nexport class AnswerDraftService {\r\n    constructor(\r\n        private http: HttpClient) {\r\n    }\r\n\r\n    getForQuestion(questionId: number): Observable<AnswerDraft> {\r\n        return this.http.get<AnswerDraft>(\r\n            'api/AnswerDrafts/ForQuestion/' + questionId\r\n        ).pipe(\r\n            tap(answers => console.log(`fetched draft`)),\r\n            catchError(this.handleError<AnswerDraft>('getForQuestion'))\r\n        );\r\n    }\r\n\r\n    getById(draftId: number): Observable<AnswerDraft>  {\r\n        return this.http.get<AnswerDraft>(\r\n            'api/AnswerDrafts/' + draftId\r\n        ).pipe(\r\n            tap(answers => console.log(`fetched draft`)),\r\n            catchError(this.handleError<AnswerDraft>('get by id'))\r\n        );\r\n    }\r\n\r\n    update(draft: AnswerDraft): Observable<any> {\r\n        return this.http.put(\r\n            'api/AnswerDrafts/' + draft.id,\r\n            draft\r\n        ).pipe(\r\n            tap(answers => console.log(`updated draft`)),\r\n            catchError(this.handleError('update draft'))\r\n        );\r\n    }\r\n\r\n    delete(draftId: number): Observable<any> {\r\n        return this.http.put(\r\n            'api/AnswerDrafts/delete/' + draftId,\r\n            null\r\n        ).pipe(\r\n            tap(answers => console.log(`deleted draft`)),\r\n            catchError(this.handleError('delete draft'))\r\n        );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { AnswerPayment, AnswerPaymentResult } from '../models/AnswerPayment';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable()\r\nexport class AnswerPaymentService {\r\n    constructor(\r\n        private http: HttpClient) {\r\n    }\r\n\r\n    private apiUrlRoot = 'api/AnswerPayments';\r\n\r\n    postPayment(answerPayment: AnswerPayment): Observable<AnswerPaymentResult> {\r\n        console.log(\"posting payment\");\r\n        return this.http.post<AnswerPaymentResult>(this.apiUrlRoot, answerPayment, httpOptions).pipe(\r\n            tap(_ => console.log(`posted payment`)),\r\n            catchError(this.handleError<AnswerPaymentResult>('post payment'))\r\n        );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { AnswerRating } from '../models/AnswerRating';\r\n\r\n@Injectable()\r\nexport class AnswerRatingService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    postRating(answerRating: AnswerRating): Observable<AnswerRating> {\r\n        return this.http.post<AnswerRating>('api/answerratings', answerRating)\r\n            .pipe(\r\n                tap(_ => console.log(``)),\r\n                catchError(this.handleError<any>(''))\r\n            );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { User } from '../models/User';\r\nimport { AnswerRating } from '../models/AnswerRating';\r\nimport { Answer } from '../models/Answer';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n// AnswerForm is different from Answer because\r\n// Answer price and anonymity comes from form\r\n// but the content comes from content-editor.\r\nexport interface AnswerForm {\r\n    price: number;\r\n    isAnonymous: boolean;\r\n}\r\n\r\nexport interface UserSpecificAnswerView {\r\n    answer: Answer;\r\n    rating: AnswerRating;\r\n    averageRating: number;\r\n}\r\n\r\n@Injectable()\r\nexport class AnswerService {\r\n    constructor(\r\n        private http: HttpClient) {\r\n    }\r\n\r\n    private answersUrl = 'api/answers';  // URL to web api\r\n\r\n    getForQuestion(questionId: number): Observable<UserSpecificAnswerView[]> {\r\n        return this.http.get<UserSpecificAnswerView[]>(\r\n            'api/Answers/ForQuestion/' + questionId\r\n        ).pipe(\r\n            tap(answers => console.log(`fetched answers`)),\r\n            catchError(this.handleError('getForQuestion', []))\r\n        );\r\n    }\r\n\r\n\r\n    getById(id: number): Observable<Answer>{\r\n        return this.http.get<Answer>(\r\n            'api/Answers/' + id\r\n        ).pipe(\r\n            tap(_ => console.log(`fetched answer by id`)),\r\n            catchError(this.handleError<Answer>(`get by id answer`))\r\n        );\r\n    }\r\n\r\n    /** POST: add a new Answer to the server */\r\n    add(answer: Answer): Observable<Answer> {\r\n        return this.http.post<Answer>(this.answersUrl, answer, httpOptions).pipe(\r\n            tap((answer: Answer) => console.log(`added answer`)),\r\n            catchError(this.handleError<Answer>('add answer'))\r\n        );\r\n    }\r\n\r\n\r\n    purchase(answerId: number): Observable<number> {\r\n        return this.http.post<number>('api/PurchasedAnswers', answerId, httpOptions).pipe(\r\n            tap((answerId: number) => console.log(`purchased answer`)),\r\n            catchError(this.handleError<number>('purchases answer'))\r\n        );\r\n    }\r\n\r\n\r\n    update(answer: Answer): Observable<any> {\r\n        return this.http.put(\r\n            'api/Answers/' + answer.id,\r\n            answer, httpOptions\r\n        ).pipe(\r\n            tap(_ => console.log(`updated answer id=${answer.id}`)),\r\n            catchError(this.handleError<any>('update answer'))\r\n        );\r\n    }\r\n\r\n\r\n    // Delete is needed separate from udpate because,\r\n    // when deleting answer, protected content is not loaded\r\n    // as it was not in edit mode yet.\r\n    delete(answerId: number) {\r\n\r\n        return this.http.put(\r\n            'api/Answers/delete/' + answerId,\r\n            null, httpOptions\r\n        ).pipe(\r\n            tap(_ => console.log(`deleted answer id=${answerId}`)),\r\n            catchError(this.handleError<any>('delete answer'))\r\n        );\r\n    }\r\n\r\n    unDelete(answerId: number) {\r\n        return this.http.put(\r\n            'api/Answers/undelete/' + answerId, // TODO: not implemented yet.\r\n            null, httpOptions\r\n        ).pipe(\r\n            tap(_ => console.log(`deleted answer id=${answerId}`)),\r\n            catchError(this.handleError<any>('delete answer'))\r\n        );\r\n    }\r\n\r\n    /**\r\n  * Handle Http operation that failed.\r\n  * Let the app continue.\r\n  * @param operation - name of the operation that failed\r\n  * @param result - optional value to return as the observable result\r\n  */\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { User } from '../models/User';\r\n\r\nexport class Education {\r\n    id!: number;\r\n    school!: string;\r\n    concentration!: string;\r\n    secondaryConcentration!: string\r\n    degreeType!: string;\r\n    graduationYear!: number;\r\n}\r\n\r\nexport class Employment {\r\n    id!: number;\r\n    position!: string;\r\n    company!: string;\r\n    start!: Date;\r\n    end: Date | undefined;\r\n    isCurrent!: boolean;\r\n}\r\n\r\nexport class Credentials {\r\n    public educations: Education[] = [];\r\n    public employments: Employment[] = [];\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class ApplicationUserService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getProfile(id: number | undefined): Observable<User> {\r\n        var url = 'api/profile';\r\n\r\n        if (id) {\r\n            url = url + \"/\" + id;\r\n        }\r\n        return this.http.get<User>(url)\r\n            .pipe(\r\n                tap(_ => console.log(``)),\r\n                catchError(this.handleError<User>('get'))\r\n            );\r\n    }\r\n\r\n    getCredentials(id: number | undefined): Observable<Credentials> {\r\n        var url = 'api/credentials';\r\n        if (id) {\r\n            url = url + '/' + id;\r\n        }\r\n        return this.http.get<Credentials>(url)\r\n            .pipe(\r\n                tap(_ => console.log(`received credential`)),\r\n                catchError(this.handleError<Credentials>('get'))\r\n            );\r\n    }\r\n\r\n  updatePictureUrl(user: User): Observable<any> {\r\n    return this.http.put('api/profile/pictureurl', user)\r\n      .pipe(\r\n        tap(_ => console.log(`updated profule info`)),\r\n        catchError(this.handleError('update credential'))\r\n      );\r\n  }\r\n\r\n    updateUser(user: User): Observable<any> {\r\n        return this.http.put('api/profile', user)\r\n            .pipe(\r\n                tap(_ => console.log(`updated profule info`)),\r\n                catchError(this.handleError('update credential'))\r\n            );\r\n    }\r\n\r\n    addEducaion(education: Education): Observable<any> {\r\n        return this.http.post('api/credentials/educations', education)\r\n            .pipe(\r\n                tap(_ => console.log(`added education`)),\r\n                catchError(this.handleError('add education'))\r\n            );\r\n    }\r\n\r\n    updateEducaion(education: Education): Observable<any>  {\r\n        return this.http.put('api/credentials/educations', education)\r\n            .pipe(\r\n                tap(_ => console.log(``)),\r\n                catchError(this.handleError('update edu'))\r\n            );\r\n    }\r\n\r\n    addEmployment(employment: Employment): Observable<any>  {\r\n        return this.http.post('api/credentials/employments', employment)\r\n            .pipe(\r\n                tap(_ => console.log(``)),\r\n                catchError(this.handleError('add empl'))\r\n            );\r\n    }\r\n\r\n    updateEmployment(employment: Employment): Observable<any>  {\r\n        return this.http.put('api/credentials/employments', employment)\r\n            .pipe(\r\n                tap(_ => console.log(``)),\r\n                catchError(this.handleError('update employ'))\r\n            );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { User } from '../models/User';\r\n\r\nexport class LoginCredential {\r\n    Email!: string;\r\n    Password!: string;\r\n}\r\n\r\nexport class RegistrationForm {\r\n    Email!: string;\r\n    Password!: string;\r\n    ConfirmEmailCode!: string;\r\n}\r\n\r\n\r\n\r\n@Injectable()\r\nexport class IdentityService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    register(regForm: RegistrationForm): Observable<any> {\r\n        return this.http.post('api/Account/Register', regForm)\r\n            .pipe(\r\n                tap(_ => console.log(``)),\r\n                catchError(this.handleError('register'))\r\n            );\r\n    }\r\n\r\n    confirmRegistration(regForm: RegistrationForm): Observable<any> {\r\n        return this.http.post('api/Account/Confirm', regForm)\r\n            .pipe(\r\n                tap(_ => console.log(``)),\r\n                catchError(this.handleError('register'))\r\n            );\r\n    }\r\n\r\n    login(credential: LoginCredential): Observable<User> {\r\n        return this.http.post<User>('api/Account', credential)\r\n            .pipe(\r\n                tap(_ => console.log(``)),\r\n                catchError(this.handleError<User>('login'))\r\n            );\r\n    }\r\n\r\n    logout(): Observable<any> {\r\n        return this.http.post('api/account/logout', null)\r\n            .pipe(\r\n                tap(_ => console.log(``)),\r\n                catchError(this.handleError('logout'))\r\n            );\r\n    }\r\n\r\n    getLoggedInUser(): Observable<User> {\r\n        return this.http.get<User>('api/account/user')\r\n            .pipe(\r\n                tap(_ => console.log(`logged in`)),\r\n                catchError(this.handleError<User>('get logged in user'))\r\n            );\r\n    }\r\n\r\n    refreshCSRFToken(): Observable<any> {\r\n        return this.http.get('api/Account/refreshtoken')\r\n            .pipe(\r\n                tap(_ => console.log(``)),\r\n                catchError(this.handleError('refresh CSRF token'))\r\n            );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            //console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            console.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { ResponseType } from '@angular/http';\r\n\r\n\r\n@Injectable()\r\nexport class ImageStoreService {\r\n    constructor(\r\n        private http: HttpClient) {\r\n    }\r\n\r\n    private apiRootUrl = 'api/imagestore';  // URL to web api\r\n\r\n    /** POST: add a new Answer to the server */\r\n    upload(fd: FormData): Observable<any> {\r\n        console.log(fd);\r\n        return this.http.post<any>(this.apiRootUrl, fd).pipe(\r\n            tap(p => console.log(`uploaded file ${p}`)),\r\n            catchError(this.handleError<any>('upload File'))\r\n        );\r\n    }\r\n\r\n    get(name: string): Observable<any> {\r\n        return this.http.get(this.apiRootUrl + \"/\" + name, { responseType: 'blob' }).pipe(\r\n            tap(_ => console.log(`fetching image`)),\r\n            catchError(this.handleError('image fetch'))\r\n        );;\r\n    }\r\n\r\n    /**\r\n  * Handle Http operation that failed.\r\n  * Let the app continue.\r\n  * @param operation - name of the operation that failed\r\n  * @param result - optional value to return as the observable result\r\n  */\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nexport interface Notification {\r\n    id: number;\r\n    EventDescription: string;\r\n    OriginData: Date;\r\n    Link: string;\r\n}\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getUnseen(): Observable<Notification[]> {\r\n        return this.http.get<Notification[]>('api/notifications/unseen')\r\n            .pipe(\r\n                tap(n => console.log(`fetched notifs`)),\r\n                catchError(this.handleError('get unseen', []))\r\n            );\r\n    }\r\n\r\n    markAsSeen(id: number): Observable<any> {\r\n        return this.http.post('api/notifications/markseen', id)\r\n            .pipe(\r\n                tap(n => console.log(`marked notif seen`)),\r\n                catchError(this.handleError('mark seen'))\r\n            );\r\n    }\r\n\r\n    markAllAsSeen(): Observable<any> {\r\n        return this.http.post('api/notifications/markallseen', null)\r\n            .pipe(\r\n                tap(n => console.log(`marked all notifs seen`)),\r\n                catchError(this.handleError('mark all seen'))\r\n            );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Question } from '../models/Question';\r\n\r\nexport interface PurchasedAnswerView {\r\n    purchasedAnswer: PurchasedAnswer;\r\n    question: Question;\r\n}\r\n\r\nexport interface PurchasedAnswer {\r\n    id: number;\r\n    userId: number;\r\n    answerId: number;\r\n    purchaseDate: Date;\r\n    htmlContent: string;\r\n}\r\n\r\n@Injectable()\r\nexport class PurchasedAnswerService {\r\n    constructor(\r\n        private http: HttpClient) {\r\n    }\r\n\r\n    get(): Observable<PurchasedAnswerView[]> {\r\n        return this.http.get<PurchasedAnswerView[]>(\r\n            'api/PurchasedAnswers'\r\n        ).pipe(\r\n            tap(p => console.log(``)),\r\n            catchError(this.handleError('get', []))\r\n        );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Question } from '../models/Question';\r\nimport { QuestionTopic } from '../models/QuestionTopic';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable()\r\nexport class QuestionTopicService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    private apiUrlRoot = 'api/QuestionTopics';\r\n\r\n    add(questionId: number, topicId: number): Observable<any> {\r\n        let questionTopic = new QuestionTopic();\r\n        questionTopic.questionId = questionId;\r\n        questionTopic.topicId = topicId;\r\n\r\n        return this.http.post(this.apiUrlRoot, questionTopic, httpOptions).pipe(\r\n            tap(_ => console.log(`added question topic`)),\r\n            catchError(this.handleError<any>('add question topic'))\r\n        );\r\n    }\r\n\r\n    /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n\r\n@Injectable()\r\nexport class QuestionViewService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    private apiUrlRoot = 'api/QuestionViews';\r\n\r\n\r\n    /** POST: add a new hero to the server */\r\n    add(questionId: number): Observable<any> {\r\n        return this.http.post(this.apiUrlRoot, questionId, httpOptions).pipe(\r\n            tap(_ => console.log(`added question view`)),\r\n            catchError(this.handleError('add question view'))\r\n        );\r\n    }\r\n\r\n    /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class QuestionFollowerService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    follow(questionId: number): Observable<any> {\r\n        return this.http.post('api/questionfollowers/follow', questionId)\r\n            .pipe(\r\n                tap(heroes => console.log(`followed`)),\r\n                catchError(this.handleError('follow'))\r\n            );\r\n    }\r\n\r\n    unfollow(questionId: number) {\r\n        return this.http.post('api/questionfollowers/unfollow', questionId)\r\n            .pipe(\r\n                tap(heroes => console.log(`unfollowed`)),\r\n                catchError(this.handleError('unfollow'))\r\n            );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { User } from '../models/User';\r\nimport { Question } from '../models/Question';\r\nimport { Answer } from '../models/Answer';\r\n\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n\r\nexport interface UserSpecificQuestionPreview {\r\n    isFollowing: boolean;\r\n    question: Question;\r\n    previewAnswer: Answer;\r\n}\r\n\r\n@Injectable()\r\nexport class QuestionService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    private questionsUrl = 'api/Questions';  // URL to web api\r\n\r\n    getAllAskedByMe(): Observable<Question[]> {\r\n        return this.http.get<Question[]>(this.questionsUrl + '/my')\r\n            .pipe(\r\n                tap(heroes => console.log(`fetched my questions`)),\r\n                catchError(this.handleError('getAllAskedByMe', []))\r\n            );\r\n    }\r\n\r\n    get(): Observable<UserSpecificQuestionPreview[]> {\r\n        return this.http.get<UserSpecificQuestionPreview[]>(this.questionsUrl)\r\n            .pipe(\r\n                tap(_ => console.log(`fetched all questions`)),\r\n                catchError(this.handleError('get', []))\r\n            );\r\n    }\r\n\r\n    getById(id: number): Observable<Question> {\r\n        return this.http.get<Question>('api/questions/' + id)\r\n            .pipe(\r\n                tap(heroes => console.log(`fetched a question`)),\r\n                catchError(this.handleError<Question>('getById'))\r\n            );\r\n    }\r\n\r\n    /** POST: add a new hero to the server */\r\n    add(question: Question): Observable<Question> {\r\n        return this.http.post<Question>(this.questionsUrl, question, httpOptions).pipe(\r\n            tap((question: Question) => console.log(`added question`)),\r\n            catchError(this.handleError<Question>('add'))\r\n        );\r\n    }\r\n\r\n    /** PUT: update the hero on the server */\r\n    update(question: Question): Observable<any> {\r\n        return this.http.put(this.questionsUrl, question, httpOptions).pipe(\r\n            tap(_ => console.log(`updated question id=${question.id}`)),\r\n            catchError(this.handleError<any>('update question'))\r\n        );\r\n    }\r\n\r\n    /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            //this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n\r\n}\r\n","﻿import { Inject, Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class RedactorService {\r\n\r\n    redactedColor = 'rgb(211, 211, 211)';\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public getRedactionMarkersFreeHtml(html: string) {\r\n        var parser = new DOMParser();\r\n        var doc = parser.parseFromString(html, \"text/html\") as Document;\r\n        var root = doc.body as HTMLElement;\r\n        this.removeRedactionMarkers(root);\r\n        return root.innerHTML;\r\n    }\r\n\r\n    private removeRedactionMarkers(root: HTMLElement): void {\r\n\r\n        var done = false;\r\n        while (!done) {\r\n            done = true;\r\n            for (var i = 0; i < root.children.length; i++) {\r\n                var child = root.children.item(i) as HTMLElement;\r\n                let color = child.style.backgroundColor;\r\n                if (color == this.redactedColor) {\r\n                    child.style.backgroundColor = 'rgb(255, 255, 255)';\r\n                    child.style.color = 'rgb(0, 0, 0)';\r\n                    done = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < root.children.length; i++) {\r\n            var child = root.children.item(i) as HTMLElement;\r\n            this.removeRedactionMarkers(child);\r\n        }\r\n    }\r\n\r\n\r\n    public getRedactedHtml(html: string): string {\r\n        var parser = new DOMParser();\r\n        var doc = parser.parseFromString(html, \"text/html\") as Document;\r\n        var root = doc.body as HTMLElement;\r\n        this.removeRedacted(root);\r\n        return root.innerHTML;\r\n    }\r\n\r\n    private removeRedacted(root: HTMLElement): void {\r\n\r\n        var done = false;\r\n        while (!done) {\r\n            done = true;\r\n            for (var i = 0; i < root.children.length; i++) {\r\n                var child = root.children.item(i) as HTMLElement;\r\n                let color = child.style.backgroundColor;\r\n                if (color == this.redactedColor) {\r\n                    var e = document.createElement(\"span\");\r\n                    e.innerHTML = \"&nbsp;&nbsp;_____&nbsp;&nbsp;\";\r\n                    root.replaceChild(e, child);\r\n                    done = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < root.children.length; i++) {\r\n            var child = root.children.item(i) as HTMLElement;\r\n            this.removeRedacted(child);\r\n        }\r\n    }\r\n}","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { ReqInvite } from '../models/RequestInvite';\r\n\r\n@Injectable()\r\nexport class RequestInviteService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    requestInvitation(req: ReqInvite): Observable<any> {\r\n        return this.http.post('api/InvitationRequests', req)\r\n            .pipe(\r\n                tap(_ => console.log(`requested invitation`)),\r\n                catchError(this.handleError('request invitation'))\r\n            );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            //console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            console.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}