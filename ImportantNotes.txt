1. Run this to make sure node is building successfully. Otherwise deployment will fail even though it runs fine locally.
node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod

2. Why am I using EF model classes directly to send data to the front end?
Without doing so, I will have to recreate all query results by converting each object in a 
collection to the new type. It will make all queries slower for the benefit of only few 
queries where the extra layer of new types add value.

3. I don't need to store public and protected content separately like in Answers table
for Drafts. For drafts I can directly save only the protected content. Hidden or redacted version
will be only be required when the answer is published.

4. I think I should rather move deleted answers/questions/<..entities.> to a different table 
to avoid having to query as ".IsDeleted == false".

5. Should I ever delete data? I think I should. I own the copy of the data and
hold no obligation to store it for them. So legally I am not liable to keep their data 
available. 

6. The deal with Drafts:
	a. If there is an answer, there is a draft. 
	b. When editing an answer, we are really editing just the draft, not the answer.
	c. When answer is saved, draft is made equal to answer.
	d. Users with permission can see the protected content but only author can see the draft. 
	   So, I can't put draft in the ProtectedAnswerContents table.

7. The strategy for solving the dilemma of nested object structure will be this: 
Do keep the nested structure in the type definitions. Just do not load the parts that are
not needed. The burden will be on the caller to check for nulls. Communication between
caller and callee on when to expect null or not will be through testing.

8. Any propoerty that can't be initialized in constrctr needs to include undefined.
9. Relationship between the major tools and concepts:

JavaScript -> Served by -> Node (Node.js)
NPM = package manager for JavaScript modules, used by Node
TypeScript => subset of JS. 
Angular CLI => a JS module (?)
Angular Compiler => node module that coverts TS => JS (?)
WebPack => a node module, used to bundle javascript modules
Webpack-CLI => a node module

10. <app> is the root module. 
11. If you ever get dizzy figuring out how angular and webpack relate, read this:
https://angular.io/guide/webpack

12. How does XSRF token solve the cookie problem if itself is sent as a cookie?

https://stackoverflow.com/questions/20504846/why-is-it-common-to-put-csrf-prevention-tokens-in-cookies
	Using a cookie to provide the CSRF token to the client does not allow a successful attack 
	because the attacker cannot read the value of the cookie and therefore cannot put into 
	the place the server-side CSRF validation requires it to be.

	The attacker will be able to cause a request to the server with both the auth token cookie 
	and the CSRF cookie in the request headers. But the server is not looking for the CSRF token 
	as a cookie in the request headers, it's looking in the payload of the request. 
	And even if the attacker knows where to put the CSRF token in the payload, they would 
	have to read its value to put it there. But the browser's cross-origin policy prevents 
	reading any cookie value from the target website.

	The same logic does not apply to the auth token cookie, because the server is expects 
	it in the request headers and the attacker does not have to do anything special to put it there.

13. Use Gremlin Graph API is for managing relate questions.
14. Architectural goals for integrating Graph database

	1. Do not require Businless Layer to call two inserts, or two updates to the
	two underlying repos.
	2. Do not require code dupliaction if another SQL database is used with the same Graph DB

15. Although typescript 2.x support non null assertion operator, only from 2.7 it supports
	non null assertion in the property declarations.

16. To attach debugger to IIS hosted app, attach to dotnet.exe, not w3wp.exe.
17. Steps to do the https:
	1. Use IIS to create CSR
	2. Follow instructions from this site.
	3. Use the DNS record method to verify ownership.
18. Google-bot is not able to load the final html. It only sees "loading...". This makes
this site unsuitable for being searchable through google. 

One solution is to use Angular Universal. It does server side rendering (SSR).

19. Copying an Angular 6 app into solution didn't work initially because:
		ClientApp/Dist had an extra dir like this:
		ClientApp/Dist/ClientApp/....

		It should be ClientApp/dist/...

	Needed to change output dir in angular.json
